{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\PetProfile\\\\PetImage.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport { addPetImages } from '../../actions/petActs';\n\nconst PetImage = ({\n  addPetImages,\n  src,\n  pet\n}) => {\n  const _useState = useState({\n    src: src,\n    info: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  useEffect(() => {\n    const petId = pet._id;\n    console.log(petId);\n    addPetImages({\n      image,\n      petId\n    });\n    console.log(image);\n  }, [pet._id]);\n\n  const addInfo = e => {\n    setImage(_objectSpread({}, image, {\n      [image.info]: e.target.value\n    }));\n  };\n\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: src,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    placeholder: \"Tell As About The Moment You Took The Photo \",\n    onChange: e => addInfo(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  pet: state.pets.pet\n});\n\nPetImage.propTypes = {\n  image: PropTypes.object.isRequired,\n  pet: PropTypes.object.isRequired,\n  addPetImages: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  addPetImages\n})(PetImage);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/PetProfile/PetImage.js"],"names":["React","useEffect","useState","PropTypes","Grid","connect","addPetImages","PetImage","src","pet","info","image","setImage","petId","_id","console","log","addInfo","e","target","value","mapStateToProps","state","pets","propTypes","object","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,uBAA3B;;AAEA,MAAMC,QAAQ,GAAG,CAAE;AAACD,EAAAA,YAAD;AACPE,EAAAA,GADO;AAEPC,EAAAA;AAFO,CAAF,KAGP;AAAA,oBAEoBP,QAAQ,CAC1B;AACAM,IAAAA,GAAG,EAAEA,GADL;AAEAE,IAAAA,IAAI,EAAC;AAFL,GAD0B,CAF5B;AAAA;AAAA,QAECC,KAFD;AAAA,QAEQC,QAFR;;AAQFX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,KAAK,GAAGJ,GAAG,CAACK,GAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAP,IAAAA,YAAY,CAAC;AAACK,MAAAA,KAAD;AAAQE,MAAAA;AAAR,KAAD,CAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACC,GALI,EAKF,CAACF,GAAG,CAACK,GAAL,CALE,CAAT;;AAQJ,QAAMG,OAAO,GAAIC,CAAD,IAAM;AAClBN,IAAAA,QAAQ,mBAAKD,KAAL;AAAY,OAACA,KAAK,CAACD,IAAP,GAAcQ,CAAC,CAACC,MAAF,CAASC;AAAnC,OAAR;AACH,GAFD;;AAGA,SACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,GAAG,EAAEZ,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAU,IAAA,WAAW,EAAC,8CAAtB;AACD,IAAA,QAAQ,EAAGU,CAAD,IAAOD,OAAO,CAACC,CAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CA7BD;;AA+BA,MAAMG,eAAe,GAAGC,KAAK,KAAI;AAC7Bb,EAAAA,GAAG,EAAEa,KAAK,CAACC,IAAN,CAAWd;AADa,CAAJ,CAA7B;;AAIAF,QAAQ,CAACiB,SAAT,GAAqB;AACjBb,EAAAA,KAAK,EAAER,SAAS,CAACsB,MAAV,CAAiBC,UADP;AAEjBjB,EAAAA,GAAG,EAAEN,SAAS,CAACsB,MAAV,CAAiBC,UAFL;AAGjBpB,EAAAA,YAAY,EAAEH,SAAS,CAACwB,IAAV,CAAeD;AAHZ,CAArB;AAOA,eAAerB,OAAO,CAACgB,eAAD,EAClB;AAACf,EAAAA;AAAD,CADkB,CAAP,CACKC,QADL,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {connect} from 'react-redux'\r\nimport {addPetImages} from '../../actions/petActs'\r\n\r\nconst PetImage = ( {addPetImages,\r\n            src,\r\n            pet\r\n    }) => {\r\n\r\n    const [image, setImage] = useState(\r\n            {\r\n            src: src,\r\n            info:''\r\n          })\r\n\r\n        useEffect(() => {\r\n            const petId = pet._id\r\n            console.log(petId)\r\n            addPetImages({image, petId})\r\n            console.log(image)\r\n            }, [pet._id])\r\n        \r\n\r\n    const addInfo = (e) =>{\r\n        setImage({...image, [image.info]: e.target.value})\r\n    }\r\n    return (\r\n        <Grid item xs={12} sm={6} lg={4}>\r\n            <img  src={src}/>\r\n            <textarea placeholder=\"Tell As About The Moment You Took The Photo \" \r\n           onChange={(e) => addInfo(e)}></textarea> \r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    pet: state.pets.pet\r\n})\r\n\r\nPetImage.propTypes = {\r\n    image: PropTypes.object.isRequired,\r\n    pet: PropTypes.object.isRequired,\r\n    addPetImages: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {addPetImages})(PetImage)\r\n"]},"metadata":{},"sourceType":"module"}