{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _defineProperty from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{Link,Redirect}from'react-router-dom';import{connect}from'react-redux';import{setAlert}from'../../actions/alertAct';import{register}from'../../actions/authActs';export var Register=function Register(_ref){var setAlert=_ref.setAlert,register=_ref.register,isAuthenticated=_ref.isAuthenticated;var _useState=useState({name:'',email:'',password:'',checkPassword:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var name=formData.name,email=formData.email,password=formData.password,checkPassword=formData.checkPassword;var setValue=function setValue(e){setFormData(_objectSpread({},formData,_defineProperty({},e.target.name,e.target.value)));};var sentData=function sentData(e){return _regeneratorRuntime.async(function sentData$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(password!==checkPassword){setAlert('Password dose not match','danger',3000);}else{register({name:name,email:email,password:password});}case 2:case\"end\":return _context.stop();}}});};if(isAuthenticated){return React.createElement(Redirect,{to:\"/dashboard\"});}return React.createElement(Fragment,null,React.createElement(\"h1\",{className:\"large text-primary\"},\"Sign Up\"),React.createElement(\"p\",{className:\"lead\"},React.createElement(\"i\",{className:\"fas fa-user\"}),\"Create Account\"),React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){return sentData(e);}},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:function onChange(e){return setValue(e);},required:true})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:email,onChange:function onChange(e){return setValue(e);},required:true})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",minLength:\"6\",value:password,onChange:function onChange(e){return setValue(e);},required:true})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"password\",placeholder:\"Confirm Password\",name:\"checkPassword\",minLength:\"6\",value:checkPassword,onChange:function onChange(e){return setValue(e);},required:true})),React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary\",value:\"Register\"})),React.createElement(\"p\",{className:\"my-1\"},\"Already have an account?\",React.createElement(\"br\",null),React.createElement(Link,{to:\"./Login\"},\"Sign In\")));};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};export default connect(mapStateToProps,{setAlert:setAlert,register:register})(Register);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/auth/Register.js"],"names":["React","Fragment","useState","Link","Redirect","connect","setAlert","register","Register","isAuthenticated","name","email","password","checkPassword","formData","setFormData","setValue","e","target","value","sentData","preventDefault","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {setAlert} from '../../actions/alertAct'\r\nimport {register} from '../../actions/authActs'\r\n\r\n\r\nexport const Register = ({setAlert, register, isAuthenticated}) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        checkPassword: ''\r\n    })\r\n    const {name, email, password, checkPassword} = formData\r\n\r\n    const setValue = e =>{\r\n    setFormData(\r\n        { ...formData, [e.target.name]: e.target.value }\r\n        \r\n    )}\r\n\r\n    const sentData = async e => {\r\n        e.preventDefault()\r\n        if(password !== checkPassword){\r\n            setAlert('Password dose not match', 'danger', 3000)\r\n        } else{\r\n            register({name, email, password})\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    if(isAuthenticated){\r\n        return <Redirect to='/dashboard'/>\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Sign Up</h1>\r\n            <p className= 'lead'><i className='fas fa-user'/>Create Account</p>\r\n            <form className='form' onSubmit={e => sentData(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                     type='text'\r\n                     placeholder='Name'\r\n                     name='name'\r\n                     value={name}\r\n                     onChange = {e => setValue(e)}\r\n                     required\r\n                     />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                     type='email'\r\n                      placeholder='Email Address'\r\n                       name='email'\r\n                       value={email}\r\n                       onChange = {e => setValue(e)}\r\n                       required/>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    minLength='6'\r\n                    value={password}\r\n                    onChange = {e => setValue(e)}\r\n                    required/>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                    type='password'\r\n                    placeholder='Confirm Password'\r\n                    name='checkPassword'\r\n                    minLength='6'\r\n                    value={checkPassword}\r\n                    onChange = {e => setValue(e)}\r\n                    required/>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n            </form>\r\n                <p className=\"my-1\">\r\n                    Already have an account?\r\n                    <br/><Link to='./Login'>Sign In</Link>\r\n                </p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nRegister.propTypes ={\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n }\r\n\r\nconst mapStateToProps = state =>({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, \r\n    {setAlert, register})(Register)\r\n"]},"metadata":{},"sourceType":"module"}