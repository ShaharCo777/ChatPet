{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import axios from'axios';import{setAlert}from'./alertAct';import{GET_PET,GET_PETS,PET_PHOTOS,DELETE_PET,PET_ERROR}from'./consts';//create or updite pet profile\nexport var createPet=function createPet(petFormData,history){var edit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return function _callee(dispatch){var config,res,errors;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;config={headers:{'Content-Type':'application/json'}};_context.next=4;return _regeneratorRuntime.awrap(axios.post('/api/pets',petFormData,config));case 4:res=_context.sent;dispatch({type:GET_PET,data:res.data});dispatch(setAlert(edit?'Pet Profile Updated':'Pet Profile Created','success'));history.push('/dashboard');_context.next=15;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);errors=_context.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,'danger'));});}dispatch({type:PET_ERROR,data:{msg:_context.t0.response.statusText,status:_context.t0.response.status}});case 15:case\"end\":return _context.stop();}}},null,null,[[0,10]]);};};//add photos to pet\nexport var addPetImages=function addPetImages(image,id){return function _callee2(dispatch){var config,data,errors;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Content-Type':'application/json'}};data={image:image,petId:id};console.log(data);_context2.prev=3;_context2.next=6;return _regeneratorRuntime.awrap(axios.post('/api/pets/photos',data,config));case 6:_context2.next=13;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](3);errors=_context2.t0.response.data.errors;if(errors){errors.forEach(function(error){return setAlert(error.msg,'danger');});}dispatch({type:PET_ERROR,data:{msg:_context2.t0.response.statusText,status:_context2.t0.response.status}});case 13:case\"end\":return _context2.stop();}}},null,null,[[3,8]]);};};//get user pet profile\nexport var getPetById=function getPetById(petId){return function _callee3(dispatch){var res;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return _regeneratorRuntime.awrap(axios.get(\"/api/pets/\".concat(petId)));case 3:res=_context3.sent;dispatch({type:GET_PET,data:res.data});_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);dispatch({type:PET_ERROR,data:{msg:_context3.t0,status:_context3.t0}});case 10:case\"end\":return _context3.stop();}}},null,null,[[0,7]]);};};//  get pet photos by petId\nexport var getPetPhotos=function getPetPhotos(petId){return function _callee4(dispatch){var res;return _regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return _regeneratorRuntime.awrap(axios.get(\"/api/pets/\".concat(petId,\"/photos\")));case 3:res=_context4.sent;console.log(res.data);dispatch({type:PET_PHOTOS,data:res.data});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);dispatch({type:PET_ERROR,data:{msg:_context4.t0.response.statusText,status:_context4.t0.response.status}});case 11:case\"end\":return _context4.stop();}}},null,null,[[0,8]]);};};// get all the user pets\nexport var getUserPets=function getUserPets(){return function _callee5(dispatch){var res;return _regeneratorRuntime.async(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return _regeneratorRuntime.awrap(axios.get('/api/pets'));case 3:res=_context5.sent;dispatch({type:GET_PETS,data:res.data});_context5.next=10;break;case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);dispatch({type:PET_ERROR,data:{msg:_context5.t0.response.statusText,status:_context5.t0.response.status}});case 10:case\"end\":return _context5.stop();}}},null,null,[[0,7]]);};};//delete pet\nexport var deletePet=function deletePet(petId){return function _callee6(dispatch){return _regeneratorRuntime.async(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return _regeneratorRuntime.awrap(axios.delete(\"/api/pets/\".concat(petId)));case 3:dispatch({type:DELETE_PET,data:petId});dispatch(setAlert('Pet Removed','success'));_context6.next=10;break;case 7:_context6.prev=7;_context6.t0=_context6[\"catch\"](0);dispatch({type:PET_ERROR,data:{msg:_context6.t0,status:_context6.t0}});case 10:case\"end\":return _context6.stop();}}},null,null,[[0,7]]);};};","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/actions/petActs.js"],"names":["axios","setAlert","GET_PET","GET_PETS","PET_PHOTOS","DELETE_PET","PET_ERROR","createPet","petFormData","history","edit","dispatch","config","headers","post","res","type","data","push","errors","response","forEach","error","msg","statusText","status","addPetImages","image","id","petId","console","log","getPetById","get","getPetPhotos","getUserPets","deletePet","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {setAlert} from './alertAct'\r\nimport{\r\n    GET_PET,\r\n    GET_PETS,\r\n    PET_PHOTOS,\r\n    DELETE_PET,\r\n    PET_ERROR\r\n  } from './consts'\r\n\r\n\r\n//create or updite pet profile\r\nexport const createPet = (petFormData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n\r\n        const res = await axios.post('/api/pets', petFormData, config)\r\n\r\n         dispatch({\r\n            type: GET_PET,\r\n            data: res.data\r\n        })\r\n\r\n        dispatch(setAlert(edit ? 'Pet Profile Updated' : 'Pet Profile Created', 'success'))\r\n\r\n        history.push('/dashboard')\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n  \r\n        if (errors) {\r\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PET_ERROR,\r\n            data: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//add photos to pet\r\nexport const addPetImages = (image, id)  => async dispatch =>{\r\n\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    const data ={\r\n        image: image,\r\n        petId: id\r\n        }\r\n    console.log(data)\r\n\r\n    try {\r\n        await axios.post('/api/pets/photos', data, config)\r\n      } catch (err) {\r\n        const errors = err.response.data.errors;\r\n  \r\n        if (errors) {\r\n          errors.forEach(error => setAlert(error.msg, 'danger'))\r\n        }\r\n        dispatch({\r\n            type: PET_ERROR,\r\n            data: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n      }\r\n}\r\n\r\n\r\n//get user pet profile\r\nexport const getPetById = petId => async dispatch => {\r\n  try{\r\n    const res = await axios.get(`/api/pets/${petId}`)\r\n  \r\n      dispatch({\r\n          type: GET_PET,\r\n          data: res.data\r\n      })\r\n  } catch (err){\r\n      dispatch({\r\n          type: PET_ERROR,\r\n          data: {\r\n              msg: err,\r\n              status: err\r\n      }\r\n      })\r\n}}\r\n\r\n  \r\n//  get pet photos by petId\r\nexport const getPetPhotos = petId => async dispatch => {\r\n  try{\r\n    const res = await axios.get(`/api/pets/${petId}/photos`)\r\n      console.log(res.data)\r\n      dispatch({\r\n          type: PET_PHOTOS,\r\n          data: res.data\r\n      })\r\n  } catch (err){\r\n      dispatch({\r\n          type: PET_ERROR,\r\n          data: {\r\n              msg: err.response.statusText,\r\n              status: err.response.status\r\n      }\r\n      })\r\n    }\r\n}\r\n\r\n\r\n// get all the user pets\r\nexport const getUserPets = () => async dispatch => {\r\n      try{\r\n        const res = await axios.get('/api/pets')\r\n      \r\n          dispatch({\r\n              type: GET_PETS,\r\n              data: res.data\r\n          })\r\n      } catch (err){\r\n          dispatch({\r\n              type: PET_ERROR,\r\n              data: {\r\n                  msg: err.response.statusText,\r\n                  status: err.response.status\r\n          }\r\n          })\r\n        }\r\n}\r\n\r\n\r\n//delete pet\r\nexport const deletePet = petId => async dispatch =>{\r\n  try {\r\n      await axios.delete(`/api/pets/${petId}`)\r\n\r\n      dispatch({\r\n          type: DELETE_PET,\r\n          data: petId\r\n      })\r\n\r\n      dispatch(setAlert('Pet Removed', 'success'))\r\n  } catch (err) {\r\n      dispatch({\r\n          type: PET_ERROR,\r\n          data: { \r\n              msg: err,\r\n              status: err\r\n          }\r\n      })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}