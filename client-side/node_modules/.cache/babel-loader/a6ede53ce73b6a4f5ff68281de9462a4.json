{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\PetProfile\\\\forms\\\\CreatePetProfile.js\";\nimport React, { Fragment, useState } from 'react';\nimport { createPet } from '../../../actions/petActs';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Dropzone from '../../imageSetting/Dropezone';\nimport Cropper from 'react-easy-crop';\nimport getCroppedImg from '../../imageSetting/cropImage';\nimport spinner from '../../../img/spinner.gif';\nimport PetImage from '../petImage';\nimport Grid from '@material-ui/core/Grid';\n\nconst CreatePetProfile = ({\n  createPet,\n  history\n}) => {\n  const _useState = useState({\n    name: '',\n    sex: '',\n    type: '',\n    race: '',\n    age: null,\n    images: [],\n    // imagesInfo:[],\n    descreption: '',\n    traind: false,\n    cost: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        petFormData = _useState2[0],\n        setPetFormData = _useState2[1];\n\n  const name = petFormData.name,\n        sex = petFormData.sex,\n        type = petFormData.type,\n        race = petFormData.race,\n        age = petFormData.age,\n        traind = petFormData.traind,\n        images = petFormData.images,\n        descreption = petFormData.descreption,\n        cost = petFormData.cost;\n\n  const getBase64 = image => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n\n      reader.readAsDataURL(image);\n    });\n  };\n\n  const onDrop = async e => {\n    const photo = images.push((await getBase64(e[0])));\n    setPetFormData(_objectSpread({}, petFormData, {\n      [images]: photo\n    }));\n  };\n\n  const onChange = e => {\n    setPetFormData(_objectSpread({}, petFormData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const sentData = async e => {\n    e.preventDefault(); // console.log(imagesInfo)\n\n    createPet(petFormData, history);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Create Your Pet Profile\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-pet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \" Let's get some information about your pet\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => sentData(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Pet's Name\",\n    name: \"name\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"This is how your pet will be presented\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"sex\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"* Select Your Pet Gender\"), React.createElement(\"option\", {\n    value: \"male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Male\"), React.createElement(\"option\", {\n    value: \"female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"female\"), React.createElement(\"option\", {\n    value: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Other\"))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Pet's Type\",\n    name: \"type\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"What Kind Of Animal Is It?\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Pet's Race\",\n    name: \"race\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Only If You Know\")), React.createElement(\"label\", {\n    className: \"checkBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Is Your Pet Traind?\", React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"traind\",\n    onChange: () => {\n      setPetFormData(_objectSpread({}, petFormData, {\n        traind: !traind\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, images && images.length < 10 && images.map(image => React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(PetImage, {\n    src: image,\n    className: \"petImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })))), React.createElement(Dropzone, {\n    onDrop: e => onDrop(e),\n    multiple: false,\n    style: 'smlDropzone',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    placeholder: \"Add More Info..\",\n    name: \"general\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Add what ever you want\")), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    className: \"btn btn-light my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Go Back\"))));\n};\n\nCreatePetProfile.propTypes = {\n  createPet: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  createPet\n})(withRouter(CreatePetProfile));","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/PetProfile/forms/CreatePetProfile.js"],"names":["React","Fragment","useState","createPet","PropTypes","connect","withRouter","Dropzone","Cropper","getCroppedImg","spinner","PetImage","Grid","CreatePetProfile","history","name","sex","type","race","age","images","descreption","traind","cost","petFormData","setPetFormData","getBase64","image","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","onDrop","e","photo","push","onChange","target","value","sentData","preventDefault","length","map","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACV,EAAAA,SAAD;AAAYW,EAAAA;AAAZ,CAAD,KAA0B;AAAA,oBAEXZ,QAAQ,CAAC;AAC3Ca,IAAAA,IAAI,EAAC,EADsC;AAE3CC,IAAAA,GAAG,EAAC,EAFuC;AAG3CC,IAAAA,IAAI,EAAC,EAHsC;AAI3CC,IAAAA,IAAI,EAAC,EAJsC;AAK3CC,IAAAA,GAAG,EAAC,IALuC;AAM3CC,IAAAA,MAAM,EAAC,EANoC;AAO3C;AACAC,IAAAA,WAAW,EAAC,EAR+B;AAS3CC,IAAAA,MAAM,EAAC,KAToC;AAU3CC,IAAAA,IAAI,EAAC;AAVsC,GAAD,CAFG;AAAA;AAAA,QAE1CC,WAF0C;AAAA,QAE7BC,cAF6B;;AAAA,QAiBzCV,IAjByC,GA2B3CS,WA3B2C,CAiBzCT,IAjByC;AAAA,QAkBzCC,GAlByC,GA2B3CQ,WA3B2C,CAkBzCR,GAlByC;AAAA,QAmBzCC,IAnByC,GA2B3CO,WA3B2C,CAmBzCP,IAnByC;AAAA,QAoBzCC,IApByC,GA2B3CM,WA3B2C,CAoBzCN,IApByC;AAAA,QAqBzCC,GArByC,GA2B3CK,WA3B2C,CAqBzCL,GArByC;AAAA,QAsBzCG,MAtByC,GA2B3CE,WA3B2C,CAsBzCF,MAtByC;AAAA,QAuBzCF,MAvByC,GA2B3CI,WA3B2C,CAuBzCJ,MAvByC;AAAA,QAyBzCC,WAzByC,GA2B3CG,WA3B2C,CAyBzCH,WAzByC;AAAA,QA0BzCE,IA1ByC,GA2B3CC,WA3B2C,CA0BzCD,IA1ByC;;AA8B/C,QAAMG,SAAS,GAAIC,KAAD,IAAW;AAC3B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;AACpC,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,MAAMJ,OAAO,CAACE,MAAM,CAACG,MAAR,CAA7B;;AACAH,MAAAA,MAAM,CAACI,OAAP,GAAiBC,KAAK,IAAIN,MAAM,CAACM,KAAD,CAAhC;;AACAL,MAAAA,MAAM,CAACM,aAAP,CAAqBV,KAArB;AACF,KALM,CAAP;AAKG,GANL;;AASF,QAAMW,MAAM,GAAE,MAAMC,CAAN,IAAU;AACtB,UAAMC,KAAK,GAAGpB,MAAM,CAACqB,IAAP,EAAa,MAAMf,SAAS,CAACa,CAAC,CAAC,CAAD,CAAF,CAA5B,EAAd;AACAd,IAAAA,cAAc,mBAAKD,WAAL;AAAkB,OAACJ,MAAD,GAAUoB;AAA5B,OAAd;AACC,GAHH;;AAKE,QAAME,QAAQ,GAAGH,CAAC,IAAG;AACnBd,IAAAA,cAAc,mBAAKD,WAAL;AAAkB,OAACe,CAAC,CAACI,MAAF,CAAS5B,IAAV,GAAiBwB,CAAC,CAACI,MAAF,CAASC;AAA5C,OAAd;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAE,MAAMN,CAAN,IAAU;AACxBA,IAAAA,CAAC,CAACO,cAAF,GADwB,CAExB;;AACA3C,IAAAA,SAAS,CAACqB,WAAD,EAAcV,OAAd,CAAT;AACD,GAJD;;AAMH,SAEG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,EAIA;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,+CAJA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPA,EAQA;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAGyB,CAAC,IAAIM,QAAQ,CAACN,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,cAA/B;AACC,IAAA,IAAI,EAAC,MADN;AACa,IAAA,QAAQ,EAAGA,CAAD,IAAOG,QAAQ,CAACH,CAAD,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAHJ,CADA,EAQE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAmB,IAAA,QAAQ,EAAGA,CAAD,IAAOG,QAAQ,CAACH,CAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF,CARF,EAgBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,YAA/B;AACA,IAAA,IAAI,EAAC,MADL;AACY,IAAA,QAAQ,EAAGA,CAAD,IAAOG,QAAQ,CAACH,CAAD,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHF,CAhBF,EAsBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,YAA/B;AACA,IAAA,IAAI,EAAC,MADL;AACY,IAAA,QAAQ,EAAGA,CAAD,IAAOG,QAAQ,CAACH,CAAD,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CAtBF,EA4BE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACA;AAAO,IAAA,IAAI,EAAC,UAAZ;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,QAAQ,EAAE,MAAK;AAChBd,MAAAA,cAAc,mBAAKD,WAAL;AAAkBF,QAAAA,MAAM,EAAE,CAACA;AAA3B,SAAd;AAAkD,KAHlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAKA;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CA5BF,EAmCE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,MAAM,IAAIA,MAAM,CAAC2B,MAAP,GAAgB,EAA1B,IAAgC3B,MAAM,CAAC4B,GAAP,CAAWrB,KAAK,IAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAsB,IAAA,SAAS,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN,CAD+B,CADjC,CAnCF,EA+CE,oBAAC,QAAD;AACA,IAAA,MAAM,EAAGY,CAAD,IAAOD,MAAM,CAACC,CAAD,CADrB;AAEA,IAAA,QAAQ,EAAE,KAFV;AAGA,IAAA,KAAK,EAAE,aAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CF,EAmDE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,WAAW,EAAC,iBAAtB;AACA,IAAA,IAAI,EAAC,SADL;AACe,IAAA,QAAQ,EAAGA,CAAD,IAAOG,QAAQ,CAACH,CAAD,CADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHF,CAnDF,EAwDE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDF,EAyDE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzDF,CARA,CADF,CAFH;AAwEC,CA9HF;;AAgIA1B,gBAAgB,CAACoC,SAAjB,GAA6B;AAC3B9C,EAAAA,SAAS,EAAEC,SAAS,CAAC8C,IAAV,CAAeC;AADC,CAA7B;AAIA,eAAe9C,OAAO,CAAC,IAAD,EACpB;AAACF,EAAAA;AAAD,CADoB,CAAP,CACCG,UAAU,CAACO,gBAAD,CADX,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport {createPet} from '../../../actions/petActs'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Dropzone from '../../imageSetting/Dropezone'\r\nimport Cropper from 'react-easy-crop'\r\nimport getCroppedImg from '../../imageSetting/cropImage'\r\nimport spinner from '../../../img/spinner.gif'\r\nimport PetImage from '../petImage'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst CreatePetProfile = ({createPet, history}) => {\r\n    \r\n  const [petFormData, setPetFormData] = useState({\r\n      name:'',\r\n      sex:'',\r\n      type:'',\r\n      race:'',\r\n      age:null,\r\n      images:[],\r\n      // imagesInfo:[],\r\n      descreption:'',\r\n      traind:false,\r\n      cost:''\r\n    })\r\n\r\n\r\n        const  { \r\n          name,\r\n          sex,\r\n          type,\r\n          race,\r\n          age,\r\n          traind,\r\n          images,\r\n          // imagesInfo,\r\n          descreption,\r\n          cost\r\n    } = petFormData\r\n\r\n\r\n    const getBase64 = (image) => {\r\n      return new Promise((resolve,reject) => {\r\n         const reader = new FileReader();\r\n         reader.onload = () => resolve(reader.result);\r\n         reader.onerror = error => reject(error);\r\n         reader.readAsDataURL(image)\r\n      })}\r\n\r\n\r\n  const onDrop =async e =>{\r\n    const photo = images.push( await getBase64(e[0]))\r\n    setPetFormData({...petFormData, [images]: photo})\r\n    }\r\n\r\n    const onChange = e =>{\r\n      setPetFormData({...petFormData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const sentData =async e =>{\r\n      e.preventDefault()\r\n      // console.log(imagesInfo)\r\n      createPet(petFormData, history)\r\n    }\r\n\r\n return (\r\n\r\n    <Fragment>\r\n      <section className=\"container\">\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Pet Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-pet\"></i> Let's get some information about your pet\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit= {e => sentData(e)}>\r\n      <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Pet's Name\"\r\n           name=\"name\" onChange={(e) => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >This is how your pet will be presented\r\n            </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <select name=\"sex\" onChange={(e) => onChange(e)}>\r\n            <option value=\"0\">* Select Your Pet Gender</option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">female</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Pet's Type\" \r\n          name=\"type\" onChange={(e) => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >What Kind Of Animal Is It?</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Pet's Race\" \r\n          name=\"race\" onChange={(e) => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Only If You Know</small>\r\n        </div>\r\n        <label className=\"checkBox\">Is Your Pet Traind?\r\n        <input type=\"checkbox\"\r\n         name='traind'\r\n         onChange={() =>{\r\n        setPetFormData({...petFormData, traind: !traind})}}/>\r\n        <span className=\"checkmark\"></span>\r\n        </label>\r\n        <Grid container spacing={3}>\r\n        {images && images.length < 10 && images.map(image =>(\r\n          <span><PetImage src={image} className='petImage'/> \r\n          {/* <textarea placeholder=\"Tell As About The Moment You Took The Photo \" \r\n          onChange={(e) =>{\r\n          const index=images.findIndex(photo => photo === image)\r\n          setPetFormData({...petFormData, [imagesInfo[index]]: e.target.value})}}></textarea> */}\r\n          </span>\r\n            \r\n        ))}\r\n        </Grid>\r\n\r\n        <Dropzone \r\n        onDrop={(e) => onDrop(e)}  \r\n        multiple={false}\r\n        style={'smlDropzone'}/>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"Add More Info..\" \r\n          name=\"general\" onChange={(e) => onChange(e)}/>\r\n          <small className=\"form-text\">Add what ever you want</small>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" >Go Back</a>\r\n      </form>\r\n    </section>\r\n    </Fragment>\r\n)}\r\n\r\nCreatePetProfile.propTypes = {\r\n  createPet: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null,\r\n  {createPet}) (withRouter(CreatePetProfile))\r\n"]},"metadata":{},"sourceType":"module"}