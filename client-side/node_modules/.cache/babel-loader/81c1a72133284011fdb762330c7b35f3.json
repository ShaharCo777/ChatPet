{"ast":null,"code":"import React from\"react\";import{useDropzone}from\"react-dropzone\";var Dropzone=function Dropzone(_ref){var onDrop=_ref.onDrop,accept=_ref.accept,_ref$multiple=_ref.multiple,multiple=_ref$multiple===void 0?true:_ref$multiple,style=_ref.style;// Initializing useDropzone hooks with options\nvar _useDropzone=useDropzone({onDrop:onDrop,accept:accept,multiple:multiple,style:style}),getRootProps=_useDropzone.getRootProps,getInputProps=_useDropzone.getInputProps,isDragActive=_useDropzone.isDragActive;return React.createElement(\"div\",getRootProps(),React.createElement(\"input\",getInputProps()),React.createElement(\"div\",{className:style},isDragActive?React.createElement(\"p\",{className:\"large\"},\"Now Release!\"):React.createElement(\"div\",null,React.createElement(\"p\",null),\"Drag your picture here,\",React.createElement(\"p\",null),\"or click to select from your files\")));};export default Dropzone;","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/imageSetting/Dropezone.js"],"names":["React","useDropzone","Dropzone","onDrop","accept","multiple","style","getRootProps","getInputProps","isDragActive"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAmB,OAAnB,CACA,OAASC,WAAT,KAA4B,gBAA5B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA8C,IAA3CC,CAAAA,MAA2C,MAA3CA,MAA2C,CAAnCC,MAAmC,MAAnCA,MAAmC,oBAA3BC,QAA2B,CAA3BA,QAA2B,wBAAlB,IAAkB,eAAZC,KAAY,MAAZA,KAAY,CAC7D;AAD6D,iBAEPL,WAAW,CAAC,CAChEE,MAAM,CAANA,MADgE,CAEhEC,MAAM,CAANA,MAFgE,CAGhEC,QAAQ,CAARA,QAHgE,CAIhEC,KAAK,CAALA,KAJgE,CAAD,CAFJ,CAErDC,YAFqD,cAErDA,YAFqD,CAEvCC,aAFuC,cAEvCA,aAFuC,CAExBC,YAFwB,cAExBA,YAFwB,CAS7D,MACE,2BAASF,YAAY,EAArB,CACE,4BAAWC,aAAa,EAAxB,CADF,CAEE,2BAAK,SAAS,CAAEF,KAAhB,EACGG,YAAY,CACX,yBAAG,SAAS,CAAC,OAAb,iBADW,CAGX,+BACG,6BADH,2BAEG,6BAFH,sCAJJ,CAFF,CADF,CAeD,CAxBD,CA0BA,cAAeP,CAAAA,QAAf","sourcesContent":["import React  from \"react\"\r\nimport { useDropzone } from \"react-dropzone\"\r\n\r\nconst Dropzone = ({ onDrop, accept, multiple=true, style }) => {\r\n  // Initializing useDropzone hooks with options\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept,\r\n    multiple,\r\n    style\r\n  });\r\n\r\n  return (\r\n    <div {...getRootProps()} >\r\n      <input {...getInputProps()} />\r\n      <div className={style}>\r\n        {isDragActive ? (\r\n          <p className=\"large\">Now Release!</p>\r\n        ) : (\r\n          <div >\r\n             <p/>Drag your picture here, \r\n             <p/>or click to select from your files\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dropzone\r\n"]},"metadata":{},"sourceType":"module"}