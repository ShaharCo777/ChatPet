{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\profile\\\\forms\\\\ProfilePicture\\\\SetUpPicture.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from '../../../drag&drop/Dropezone';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { getUserProfile, createPictureProfile } from '../../../../actions/profileActs';\n\nconst SetUpPicture = ({\n  profile: {\n    profile,\n    loading\n  },\n  createPictureProfile,\n  history\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState('choose file'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imageName = _useState4[0],\n        setImageName = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        uploadedImage = _useState6[0],\n        setUploadedImage = _useState6[1];\n\n  const onDrop = e => {\n    setImage(e[0]);\n    setImageName(e[0].name);\n  };\n\n  const sentData = async e => {\n    e.preventDefault();\n    const profile = getUserProfile();\n    profile.append('file', image);\n    createPictureProfile(image, history);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => sentData(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Set up a profile picture!\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Drag and Drop Example\"), React.createElement(\"img\", {\n    className: \"round-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Dropzone, {\n    onDrop: e => onDrop(e),\n    accept: \"image/*\",\n    multiple: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"custmFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, imageName), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-light my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" \", React.createElement(Link, {\n    to: \"/profiles/editProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Go Back\")));\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nSetUpPicture.propTypes = {\n  createPictureProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  getUserProfile: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  createPictureProfile,\n  getUserProfile\n})(withRouter(SetUpPicture));","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/profile/forms/ProfilePicture/SetUpPicture.js"],"names":["React","useEffect","useState","PropTypes","Dropzone","connect","withRouter","Link","getUserProfile","createPictureProfile","SetUpPicture","profile","loading","history","image","setImage","imageName","setImageName","uploadedImage","setUploadedImage","onDrop","e","name","sentData","preventDefault","append","mapStateToProps","state","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dropzone from '../../../drag&drop/Dropezone'\r\nimport {connect} from 'react-redux'\r\nimport { withRouter, Link} from 'react-router-dom'\r\nimport {getUserProfile, createPictureProfile} from '../../../../actions/profileActs'\r\n\r\n\r\n\r\n\r\nconst SetUpPicture = ({\r\n    profile: {profile, loading},\r\n    createPictureProfile,\r\n     history}) => {\r\n\r\n    const [image, setImage] = useState('')\r\n    const [imageName, setImageName] = useState('choose file')\r\n    const [uploadedImage, setUploadedImage] = useState({})\r\n  \r\n\r\n    const onDrop = e =>{\r\n\r\n        setImage(e[0])\r\n        setImageName(e[0].name)\r\n      }\r\n    \r\n    const sentData = async e =>{\r\n        e.preventDefault()\r\n        const profile = getUserProfile()\r\n        profile.append('file', image)\r\n        createPictureProfile(image, history)\r\n      }\r\n\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit= {e => sentData(e)}>\r\n         <div className=\"form-group\">\r\n        <h3>Set up a profile picture!</h3><br/>\r\n        <h1 className=\"text-center\">Drag and Drop Example</h1>\r\n        <img className='round-img'  /> \r\n        <Dropzone onDrop={(e) => onDrop(e)} accept={\"image/*\"} multiple={false}/>\r\n        </div>\r\n        <label htmlFor=\"custmFile\">{imageName}</label>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\"  value='Submit'/>\r\n        <button className=\"btn btn-light my-1\"> <Link to='/profiles/editProfile'>Go Back</Link></button>\r\n      </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nSetUpPicture.propTypes = {\r\n    createPictureProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    getUserProfile: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {createPictureProfile, getUserProfile}) (withRouter(SetUpPicture))\r\n\r\n   \r\n   "]},"metadata":{},"sourceType":"module"}