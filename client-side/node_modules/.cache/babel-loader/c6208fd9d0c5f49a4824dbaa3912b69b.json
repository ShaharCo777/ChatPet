{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import axios from'axios';import{setAlert}from'./alertAct';import{ADD_POST,ADD_COMMENT,REMOVE_COMMENT,GET_POST,GET_POSTS,DELETE_POST,UPDATE_LIKES,POST_ERROR}from'./consts';// add post\nexport var addPost=function addPost(post){return function _callee(dispatch){var config,res;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;config={headers:{'Content-Type':'application/json'}};_context.next=4;return _regeneratorRuntime.awrap(axios.post('/api/posts',post,config));case 4:res=_context.sent;console.log(res.data);dispatch({type:ADD_POST,data:res.data});dispatch(setAlert('Post Created','success'));_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);dispatch({type:POST_ERROR,data:{msg:_context.t0,status:_context.t0}});case 13:case\"end\":return _context.stop();}}},null,null,[[0,10]]);};};// add a comment\nexport var addComment=function addComment(postId,comment){return function _callee2(dispatch){var config,res;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;config={headers:{'Content-Type':'application/json'}};_context2.next=4;return _regeneratorRuntime.awrap(axios.post(\"/api/posts/comment/\".concat(postId),comment,config));case 4:res=_context2.sent;dispatch({type:ADD_COMMENT,data:res.data});dispatch(setAlert('Comment Added','success'));_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);dispatch({type:POST_ERROR,data:{msg:_context2.t0,status:_context2.t0}});case 12:case\"end\":return _context2.stop();}}},null,null,[[0,9]]);};};//get spesific post\nexport var getPost=function getPost(postId){return function _callee3(dispatch){var res;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return _regeneratorRuntime.awrap(axios.get(\"/api/posts/\".concat(postId)));case 3:res=_context3.sent;dispatch({type:GET_POST,data:res.data});_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);dispatch({type:POST_ERROR,data:{msg:_context3.t0,status:_context3.t0}});case 10:case\"end\":return _context3.stop();}}},null,null,[[0,7]]);};};//get all the posts\nexport var getPosts=function getPosts(){return function _callee4(dispatch){var res;return _regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return _regeneratorRuntime.awrap(axios.get('/api/posts'));case 3:res=_context4.sent;dispatch({type:GET_POSTS,data:res.data});_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);dispatch({type:POST_ERROR,data:{msg:_context4.t0,status:_context4.t0}});case 10:case\"end\":return _context4.stop();}}},null,null,[[0,7]]);};};// delete post\nexport var deletePost=function deletePost(postId){return function _callee5(dispatch){return _regeneratorRuntime.async(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return _regeneratorRuntime.awrap(axios.delete(\"/api/posts/\".concat(postId)));case 3:dispatch({type:DELETE_POST,data:postId});dispatch(setAlert('Post Removed','success'));_context5.next=10;break;case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);dispatch({type:POST_ERROR,data:{msg:_context5.t0,status:_context5.t0}});case 10:case\"end\":return _context5.stop();}}},null,null,[[0,7]]);};};// delete a comment\nexport var deleteComment=function deleteComment(commentId){return function _callee6(dispatch){return _regeneratorRuntime.async(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return _regeneratorRuntime.awrap(axios.delete(\"/api/posts/comment/\".concat(commentId)));case 3:dispatch({type:REMOVE_COMMENT,data:commentId});dispatch(setAlert('Comment Removed','success'));_context6.next=10;break;case 7:_context6.prev=7;_context6.t0=_context6[\"catch\"](0);dispatch({type:POST_ERROR,data:{msg:_context6.t0,status:_context6.t0}});case 10:case\"end\":return _context6.stop();}}},null,null,[[0,7]]);};};// add like\nexport var addLike=function addLike(postId){return function _callee7(dispatch){var res;return _regeneratorRuntime.async(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return _regeneratorRuntime.awrap(axios.put(\"/api/posts/like/\".concat(postId)));case 3:res=_context7.sent;dispatch({type:UPDATE_LIKES,data:{postId:postId,likes:res.data}});_context7.next=10;break;case 7:_context7.prev=7;_context7.t0=_context7[\"catch\"](0);dispatch({type:POST_ERROR,data:{msg:_context7.t0,status:_context7.t0}});case 10:case\"end\":return _context7.stop();}}},null,null,[[0,7]]);};};// remove like\nexport var removeLike=function removeLike(postId){return function _callee8(dispatch){var res;return _regeneratorRuntime.async(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;_context8.next=3;return _regeneratorRuntime.awrap(axios.put(\"/api/posts/unlike/\".concat(postId)));case 3:res=_context8.sent;dispatch({type:UPDATE_LIKES,data:{postId:postId,likes:res.data}});_context8.next=10;break;case 7:_context8.prev=7;_context8.t0=_context8[\"catch\"](0);dispatch({type:POST_ERROR,data:{msg:_context8.t0,status:_context8.t0}});case 10:case\"end\":return _context8.stop();}}},null,null,[[0,7]]);};};","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/actions/postActs.js"],"names":["axios","setAlert","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","GET_POST","GET_POSTS","DELETE_POST","UPDATE_LIKES","POST_ERROR","addPost","post","dispatch","config","headers","res","console","log","data","type","msg","status","addComment","postId","comment","getPost","get","getPosts","deletePost","delete","deleteComment","commentId","addLike","put","likes","removeLike"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { setAlert} from './alertAct'\r\nimport {\r\n    ADD_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT,\r\n    GET_POST,\r\n    GET_POSTS,\r\n    DELETE_POST,\r\n    UPDATE_LIKES,\r\n    POST_ERROR\r\n\r\n} from './consts'\r\n\r\n\r\n// add post\r\nexport const addPost = post => async dispatch =>{    \r\n    try {\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n\r\n        const res = await axios.post('/api/posts', post, config)\r\n\r\n        console.log(res.data)\r\n        dispatch({\r\n            type: ADD_POST,\r\n            data: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Post Created', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// add a comment\r\nexport const addComment = (postId, comment) => async dispatch =>{    \r\n    try {\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, comment, config)\r\n\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            data: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Comment Added', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//get spesific post\r\nexport const getPost = postId => async dispatch =>{\r\n    try {\r\n        const res = await axios.get(`/api/posts/${postId}`)\r\n        dispatch({\r\n            type: GET_POST,\r\n            data: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//get all the posts\r\nexport const getPosts = () => async dispatch =>{\r\n    try {\r\n        const res = await axios.get('/api/posts')\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            data: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// delete post\r\nexport const deletePost = postId => async dispatch =>{\r\n    try {\r\n        await axios.delete(`/api/posts/${postId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            data: postId\r\n        })\r\n\r\n        dispatch(setAlert('Post Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// delete a comment\r\nexport const deleteComment = (commentId) => async dispatch =>{    \r\n    try {\r\n        await axios.delete(`/api/posts/comment/${commentId}`)\r\n\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            data: commentId\r\n        })\r\n\r\n        dispatch(setAlert('Comment Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// add like\r\nexport const addLike = postId => async dispatch =>{\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${postId}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            data: {postId, likes: res.data}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// remove like\r\nexport const removeLike = postId => async dispatch =>{\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${postId}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            data: {postId, likes: res.data}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}