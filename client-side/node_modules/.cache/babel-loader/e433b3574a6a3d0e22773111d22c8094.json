{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\profile\\\\forms\\\\ProfilePicture\\\\SetUpPicture.js\";\nimport React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from '../../../drag&drop/Dropezone';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { getUserProfile, createPictureProfile } from '../../../../actions/profileActs';\nimport Cropper from 'react-easy-crop';\n\nconst SetUpPicture = ({\n  profile: {\n    profile,\n    loading\n  },\n  createPictureProfile,\n  history\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        crop = _useState4[0],\n        setCrop = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        zoom = _useState6[0],\n        setZoom = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        rotation = _useState8[0],\n        setRotation = _useState8[1];\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    console.log(croppedArea, croppedAreaPixels, zoom);\n  }, []);\n\n  const getBase64 = image => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n\n      reader.readAsDataURL(image);\n    });\n  };\n\n  const onDrop = async e => {\n    setImage((await getBase64(e[0])));\n  }; //save mage localy?\n\n\n  const sentData = e => {\n    e.preventDefault();\n\n    if (image) {\n      createPictureProfile(image, history);\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => sentData(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Set up a profile picture\"), React.createElement(\"img\", {\n    className: \"round-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Dropzone, {\n    onDrop: e => onDrop(e),\n    accept: \"image/*\",\n    multiple: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), image ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"crop-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Cropper, {\n    image: image,\n    crop: crop,\n    zoom: zoom,\n    rotation: rotation,\n    aspect: 4 / 3,\n    onCropChange: setCrop,\n    onCropComplete: onCropComplete,\n    onZoomChange: setZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"range\",\n    min: 1,\n    max: 3,\n    value: zoom,\n    step: 0.1,\n    onChange: e => setZoom(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"range\",\n    min: 0,\n    max: 360,\n    value: rotation,\n    step: 1,\n    onChange: e => setRotation(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))) : null, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-light my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \" \", React.createElement(Link, {\n    to: \"/profiles/editProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Go Back\"))));\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nSetUpPicture.propTypes = {\n  createPictureProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  getUserProfile: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  createPictureProfile,\n  getUserProfile\n})(withRouter(SetUpPicture));","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/profile/forms/ProfilePicture/SetUpPicture.js"],"names":["React","Fragment","useCallback","useEffect","useState","PropTypes","Dropzone","connect","withRouter","Link","getUserProfile","createPictureProfile","Cropper","SetUpPicture","profile","loading","history","image","setImage","x","y","crop","setCrop","zoom","setZoom","rotation","setRotation","onCropComplete","croppedArea","croppedAreaPixels","console","log","getBase64","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","onDrop","e","sentData","preventDefault","target","value","mapStateToProps","state","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Fragment, useCallback, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dropzone from '../../../drag&drop/Dropezone'\r\nimport {connect} from 'react-redux'\r\nimport { withRouter, Link} from 'react-router-dom'\r\nimport {getUserProfile, createPictureProfile} from '../../../../actions/profileActs'\r\nimport Cropper from 'react-easy-crop'\r\n\r\n\r\nconst SetUpPicture = ({\r\n    profile: {profile, loading},\r\n    createPictureProfile,\r\n     history}) => {\r\n\r\n    const [image, setImage] = useState('')\r\n    const [crop, setCrop] = useState({ x: 0, y: 0 })\r\n    const [zoom, setZoom] = useState(1)\r\n    const [rotation, setRotation] = useState(0)\r\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n      console.log(croppedArea, croppedAreaPixels, zoom)\r\n    }, [])\r\n\r\n    const getBase64 = (image) => {\r\n        return new Promise((resolve,reject) => {\r\n           const reader = new FileReader();\r\n           reader.onload = () => resolve(reader.result);\r\n           reader.onerror = error => reject(error);\r\n           reader.readAsDataURL(image);\r\n        })}\r\n\r\n\r\n    const onDrop =async e =>{\r\n           setImage(await getBase64(e[0]))        \r\n      }\r\n        //save mage localy?\r\n      \r\n    \r\n\r\n    const sentData = e =>{\r\n        e.preventDefault()\r\n        if(image){\r\n        createPictureProfile(image, history)\r\n        }\r\n        }\r\n\r\n    return (\r\n        <Fragment>\r\n        <form className=\"form\" onSubmit= {e => sentData(e)}>\r\n         <div className=\"form-group\">\r\n        <h1 className=\"text-center\">Set up a profile picture</h1>\r\n        <img className='round-img'  /> \r\n        <Dropzone onDrop={(e) => onDrop(e)} accept={\"image/*\"} multiple={false}/>\r\n        </div>\r\n     {image ? <div>\r\n      <div className=\"crop-container\">\r\n        <Cropper\r\n          image={image}\r\n          crop={crop}\r\n          zoom={zoom}\r\n          rotation = {rotation}\r\n          aspect={4 / 3}\r\n          onCropChange={setCrop}\r\n          onCropComplete={onCropComplete}\r\n          onZoomChange={setZoom}\r\n        />\r\n        </div>\r\n        <div className=\"controls\">\r\n        <input \r\n            type=\"range\" \r\n            min={1} \r\n            max={3}\r\n            value={zoom}\r\n            step={0.1}\r\n            onChange={(e) => setZoom(e.target.value)}\r\n        />\r\n        <input \r\n            type=\"range\" \r\n            min={0} \r\n            max={360}\r\n            value={rotation}\r\n            step={1}\r\n            onChange={(e) => setRotation(e.target.value)}\r\n        />\r\n      </div>\r\n      </div>: null}\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\"  value='Submit'/>\r\n        <button className=\"btn btn-light my-1\"> <Link to='/profiles/editProfile'>Go Back</Link></button>\r\n      </form>\r\n    </Fragment>\r\n    )\r\n     }\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nSetUpPicture.propTypes = {\r\n    createPictureProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    getUserProfile: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {createPictureProfile, getUserProfile}) (withRouter(SetUpPicture))\r\n"]},"metadata":{},"sourceType":"module"}