{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getUserProfile, deleteAccount } from '../../actions/profileActs';\nimport { getUserPets } from '../../actions/petActs';\nimport PetBar from '../PetProfile/showPets/PetBar';\nimport spinner from '../../img/spinner.gif';\nimport DashLinks from './DashLinks';\n\nconst Dashboard = ({\n  getUserProfile,\n  deleteAccount,\n  getUserPets,\n  auth: {\n    user\n  },\n  profile: {\n    loading,\n    profile\n  },\n  pets\n}) => {\n  useEffect(() => {\n    getUserProfile();\n    getUserPets();\n  }, [getUserProfile, getUserPets]);\n  return loading && profile === null ? React.createElement(\"img\", {\n    src: spinner,\n    alt: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"profileImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles/profilePicture/update\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"img\", {\n    src: profile && profile.profileImage ? profile.profileImage : user && user.avatar,\n    alt: \"profile image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Home Page\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), \"Welcome \", user && user.name), profile && profile.birthDay ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(PetBar, {\n    pets: pets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(DashLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"You don't have a profile,\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"for setting one, please click on \\\"Create Profile\\\"\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/profiles/new\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Create Profile\")), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Delete My Account\")));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile,\n  pets: state.pets.pets\n});\n\nDashboard.propTypes = {\n  getUserProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  getUserPets: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  pets: PropTypes.array.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserProfile,\n  deleteAccount,\n  getUserPets\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","Link","PropTypes","connect","getUserProfile","deleteAccount","getUserPets","PetBar","spinner","DashLinks","Dashboard","auth","user","profile","loading","pets","profileImage","avatar","name","birthDay","mapStateToProps","state","propTypes","func","isRequired","object","array"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {getUserProfile, deleteAccount \r\n} from '../../actions/profileActs'\r\nimport {getUserPets\r\n} from '../../actions/petActs'\r\n\r\nimport PetBar from '../PetProfile/showPets/PetBar'\r\nimport spinner from '../../img/spinner.gif'\r\nimport DashLinks from './DashLinks'\r\n\r\nconst Dashboard = ({\r\n    getUserProfile,\r\n    deleteAccount,\r\n    getUserPets,\r\n    auth: {user},\r\n    profile:{\r\n        loading,\r\n        profile,\r\n    },\r\n    pets\r\n    }) => {\r\n    useEffect(() => {\r\n        getUserProfile()\r\n        getUserPets()\r\n      }, [getUserProfile, getUserPets])\r\n\r\n    return (\r\n        loading && profile === null ? \r\n        <img src={spinner} alt='Loading...'\r\n        /> : <Fragment >\r\n            <span className='profileImage'>\r\n            <Link to='/profiles/profilePicture/update' >\r\n            <button>Edit</button>\r\n             <img  src={profile && profile.profileImage ? (\r\n                 profile.profileImage):(user && user.avatar)}\r\n                 alt='profile image' />\r\n             </Link></span> \r\n             <h1 className='large text-primary'>Home Page</h1>\r\n                    <p className='lead'>\r\n                    <i className='fas fa-user'></i>\r\n                    Welcome {user && user.name}</p>\r\n                {profile && profile.birthDay ? (\r\n                <Fragment>    \r\n                <PetBar pets={pets}/>\r\n                <DashLinks/>\r\n                </Fragment>\r\n                ) :(\r\n                <Fragment>\r\n                    <p>You don't have a profile,</p>\r\n                    <p>for setting one, please click on \"Create Profile\"</p><br/>\r\n                    <Link to='/profiles/new' className='btn btn-primary my-1'>\r\n                        Create Profile\r\n                    </Link>\r\n                </Fragment>\r\n                )}\r\n                <div className='my-2'>\r\n                <button className='btn btn-danger' onClick={() =>\r\n                     deleteAccount()}>\r\n                     Delete My Account\r\n                </button>\r\n                </div>\r\n             </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n    pets: state.pets.pets\r\n})\r\n\r\nDashboard.propTypes = {\r\n    getUserProfile: PropTypes.func.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n    getUserPets: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    pets: PropTypes.array.isRequired\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getUserProfile, deleteAccount, getUserPets})(Dashboard)\r\n"]},"metadata":{},"sourceType":"module"}