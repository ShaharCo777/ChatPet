{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\posts&comments\\\\showPosts\\\\PostPage\\\\Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport spinner from '../../../../img/spinner.gif';\nimport PostItem from '../PostItem';\nimport CreateComment from '../../forms/CreateComment'; // import CommentItem from '../post/CommentItem'\n\nimport { getPost } from '../../../../actions/postActs';\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.postId);\n  }, [getPost, match]);\n  console.log(post);\n  return loading || post === null ? React.createElement(\"img\", {\n    src: spinner,\n    alt: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(CreateComment, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/posts&comments/showPosts/PostPage/Post.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","spinner","PostItem","CreateComment","getPost","Post","post","loading","match","params","postId","console","log","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CACA;;AACA,SAASC,OAAT,QAAwB,8BAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACTD,EAAAA,OADS;AAETE,EAAAA,IAAI,EAAE;AACDA,IAAAA,IADC;AAEDC,IAAAA;AAFC,GAFG;AAMRC,EAAAA;AANQ,CAAD,KAMK;AAChBX,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,MAAd,CAAP;AACD,GAFQ,EAEN,CAACN,OAAD,EAAUI,KAAV,CAFM,CAAT;AAGFG,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACE,SAAOC,OAAO,IAAID,IAAI,KAAK,IAApB,GACL;AAAK,IAAA,GAAG,EAAEL,OAAV;AAAmB,IAAA,GAAG,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAIE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEK,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEA,IAAI,CAACO,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAHF;AAgBD,CA3BD;;AA6BAR,IAAI,CAACS,SAAL,GAAiB;AACfV,EAAAA,OAAO,EAAEN,SAAS,CAACiB,IAAV,CAAeC,UADT;AAEfV,EAAAA,IAAI,EAAER,SAAS,CAACmB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADoB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CACpBkB,eADoB,EAEpB;AAAEd,EAAAA;AAAF,CAFoB,CAAP,CAGbC,IAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport spinner from '../../../../img/spinner.gif'\r\nimport PostItem from '../PostItem'\r\nimport CreateComment from '../../forms/CreateComment'\r\n// import CommentItem from '../post/CommentItem'\r\nimport { getPost } from '../../../../actions/postActs'\r\n\r\nconst Post = ({\r\n     getPost,\r\n     post: { \r\n          post,\r\n          loading\r\n         },\r\n      match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.postId)\r\n  }, [getPost, match])\r\nconsole.log(post)\r\n  return loading || post === null ? (\r\n    <img src={spinner} alt='Loading...'/>\r\n    ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CreateComment postId={post._id} />\r\n      {/* <div className='comments'>\r\n        {post.comments.map(comment => (\r\n        //   <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPost }\r\n)(Post);\r\n"]},"metadata":{},"sourceType":"module"}