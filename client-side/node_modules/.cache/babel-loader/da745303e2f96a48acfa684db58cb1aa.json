{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _slicedToArray from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Fragment,useCallback,useState,useEffect}from'react';import{connect}from'react-redux';import{withRouter,Link}from'react-router-dom';import{getUserProfile,createPictureProfile}from'../../../actions/profileActs';import Cropper from'react-easy-crop';import getCroppedImg from'../../imageSetting/cropImage';import spinner from'../../../img/spinner.gif';import Dropzone from'../../imageSetting/Dropezone';var ProfilePicture=function ProfilePicture(_ref){var _ref$profile=_ref.profile,profileImage=_ref$profile.profileImage,loading=_ref$profile.loading,avatar=_ref$profile.user.avatar,createPictureProfile=_ref.createPictureProfile,getUserProfile=_ref.getUserProfile,history=_ref.history;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),image=_useState2[0],setImage=_useState2[1];var _useState3=useState({x:0,y:0}),_useState4=_slicedToArray(_useState3,2),crop=_useState4[0],setCrop=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),zoom=_useState6[0],setZoom=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),rotation=_useState8[0],setRotation=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),croppedAreaPixels=_useState10[0],setCroppedAreaPixels=_useState10[1];var onCropComplete=useCallback(function(croppedArea,croppedAreaPixels){setCroppedAreaPixels(croppedAreaPixels);},[]);useEffect(function(){getUserProfile();setImage(profileImage);},[getUserProfile,setImage,profileImage]);var getBase64=function getBase64(image){return new Promise(function(resolve,reject){var reader=new FileReader();reader.onload=function(){return resolve(reader.result);};reader.onerror=function(error){return reject(error);};reader.readAsDataURL(image);});};var _onDrop=function onDrop(e){return _regeneratorRuntime.async(function onDrop$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setImage;_context.next=3;return _regeneratorRuntime.awrap(getBase64(e[0]));case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);setCrop({x:0,y:0});setZoom(1);setRotation(0);case 8:case\"end\":return _context.stop();}}});};var sentData=function sentData(e){var croppedImage;return _regeneratorRuntime.async(function sentData$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();if(image==='')setImage(avatar);_context2.next=4;return _regeneratorRuntime.awrap(getCroppedImg(image,croppedAreaPixels,rotation));case 4:croppedImage=_context2.sent;createPictureProfile(croppedImage,history);case 6:case\"end\":return _context2.stop();}}});};return React.createElement(Fragment,null,loading?React.createElement(\"img\",{src:spinner,alt:\"Loading...\"}):React.createElement(Fragment,null,React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){return sentData(e);}},image?React.createElement(\"div\",null,React.createElement(\"h1\",{className:\"large text-primary\"},\"Update a profile picture\"),React.createElement(\"strong\",null,\"*use the sliderss for edit and the rectangle below for change the picture\"),React.createElement(\"div\",{className:\"crop-container\"},React.createElement(Cropper,{image:image,crop:crop,zoom:zoom,rotation:rotation,aspect:1,cropShape:\"round\",showGrid:false,restrictPosition:false,onCropChange:setCrop,onZoomChange:setZoom,onCropComplete:onCropComplete})),React.createElement(\"div\",null,React.createElement(\"strong\",null,\" Zoom\"),React.createElement(\"strong\",{className:\"text-controler\"},\" Rotation\"),React.createElement(\"span\",{className:\"controlers-container zoom-controler\"},React.createElement(\"input\",{type:\"range\",className:\"controlers\",min:1,max:3,value:zoom,step:0.1,onChange:function onChange(e){return setZoom(e.target.value);}})),React.createElement(\"span\",{className:\"controlers-container rotation-controler\"},React.createElement(\"input\",{type:\"range\",className:\"controlers\",min:0,max:360,value:rotation,step:1,onChange:function onChange(e){return setRotation(e.target.value);}})))):React.createElement(\"h1\",{className:\"large text-primary\"},\"Upload a profile picture\"),React.createElement(Dropzone,{onDrop:function onDrop(e){return _onDrop(e);},multiple:false,style:image?'smlDropzone':'bigDropzone'}),React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary my-1\",value:\"Submit\"}),React.createElement(\"button\",{className:\"btn btn-light my-1\",onClick:setImage(avatar)},\" \",React.createElement(Link,{to:\"/dashboard\"},\"Skip\")))));};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile};};export default connect(mapStateToProps,{createPictureProfile:createPictureProfile,getUserProfile:getUserProfile})(withRouter(ProfilePicture));","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/profile/forms/ProfilePicture.js"],"names":["React","Fragment","useCallback","useState","useEffect","connect","withRouter","Link","getUserProfile","createPictureProfile","Cropper","getCroppedImg","spinner","Dropzone","ProfilePicture","profile","profileImage","loading","avatar","user","history","image","setImage","x","y","crop","setCrop","zoom","setZoom","rotation","setRotation","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","croppedArea","getBase64","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","onDrop","e","sentData","preventDefault","croppedImage","target","value","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useCallback, useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport { withRouter, Link} from 'react-router-dom'\r\n\r\nimport {getUserProfile, createPictureProfile} from '../../../actions/profileActs'\r\n\r\nimport Cropper from 'react-easy-crop'\r\nimport getCroppedImg from '../../imageSetting/cropImage'\r\nimport spinner from '../../../img/spinner.gif'\r\nimport Dropzone from '../../imageSetting/Dropezone'\r\n\r\n\r\nconst ProfilePicture = ({\r\n    profile:{profileImage,\r\n       loading,\r\n        user:{\r\n          avatar\r\n        }\r\n      },\r\n    createPictureProfile,\r\n    getUserProfile,\r\n     history}) => {\r\n    const [image, setImage] = useState('')\r\n    const [crop, setCrop] = useState({ x: 0, y: 0 })\r\n    const [zoom, setZoom] = useState(1)\r\n    const [rotation, setRotation] = useState(0)\r\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n        setCroppedAreaPixels(croppedAreaPixels)\r\n      }, [])\r\n\r\n\r\n      useEffect(() =>  {\r\n        getUserProfile()\r\n        setImage(profileImage)\r\n        },[getUserProfile, setImage, profileImage])\r\n\r\n\r\n    const getBase64 = (image) => {\r\n        return new Promise((resolve,reject) => {\r\n           const reader = new FileReader();\r\n           reader.onload = () => resolve(reader.result);\r\n           reader.onerror = error => reject(error);\r\n           reader.readAsDataURL(image)\r\n        })}\r\n\r\n\r\n    const onDrop =async e =>{\r\n           setImage(await getBase64(e[0]))\r\n           setCrop({ x: 0, y: 0})\r\n           setZoom(1)\r\n           setRotation(0)  \r\n      }\r\n      \r\n    \r\n\r\n    const sentData = async (e) => {\r\n        e.preventDefault()\r\n        if(image ==='') setImage(avatar)\r\n        const croppedImage = await getCroppedImg(\r\n                image,\r\n                croppedAreaPixels,\r\n                rotation\r\n        )\r\n        createPictureProfile(croppedImage , history)\r\n        }\r\n                \r\n\r\n    return (\r\n        <Fragment>\r\n          {loading?         \r\n            <img src={spinner} alt='Loading...'\r\n            />  : <Fragment> \r\n        <form className=\"form\" onSubmit= {e => sentData(e)}>\r\n      {image? (\r\n      <div>          \r\n      <h1 className='large text-primary'>Update a profile picture</h1>\r\n      \r\n      <strong>\r\n            *use the sliderss for edit\r\n            and the rectangle below for change the picture\r\n      </strong>\r\n      <div className=\"crop-container\">\r\n        <Cropper\r\n          image={image}\r\n          crop={crop}\r\n          zoom={zoom}\r\n          rotation = {rotation}\r\n          aspect={1}\r\n          cropShape=\"round\"\r\n          showGrid={false}\r\n          restrictPosition={false}\r\n          onCropChange={setCrop}\r\n          onZoomChange={setZoom}\r\n          onCropComplete={onCropComplete}\r\n        /></div><div>\r\n        <strong> Zoom</strong>\r\n        <strong className=\"text-controler\"> Rotation</strong>\r\n        <span className=\"controlers-container zoom-controler\">\r\n        <input \r\n            type=\"range\" \r\n            className=\"controlers\"\r\n            min={1} \r\n            max={3}\r\n            value={zoom}\r\n            step={0.1}\r\n            onChange={(e) => setZoom(e.target.value)}\r\n        /></span>\r\n        <span className=\"controlers-container rotation-controler\">\r\n        <input \r\n            type=\"range\" \r\n            className=\"controlers\"\r\n            min={0} \r\n            max={360}\r\n            value={rotation}\r\n            step={1}\r\n            onChange={(e) => setRotation(e.target.value)}\r\n      /></span>\r\n      </div>\r\n      </div>):(\r\n      <h1 className='large text-primary'>Upload a profile picture</h1>\r\n      )}\r\n      <Dropzone \r\n        onDrop={(e) => onDrop(e)}  \r\n        multiple={false}\r\n        style={image ? ('smlDropzone'\r\n        ):(\r\n        'bigDropzone')}/>           \r\n        <input type=\"submit\" className=\"btn btn-primary my-1\"  value='Submit'/>\r\n        <button className=\"btn btn-light my-1\" onClick={setImage(avatar)}> <Link to='/dashboard'>Skip</Link></button>\r\n      </form>\r\n      </Fragment>}\r\n    </Fragment>\r\n    )\r\n     }\r\n\r\nconst mapStateToProps = state => ({\r\n      profile: state.profile\r\n})\r\n\r\nProfilePicture.propTypes = {\r\n    createPictureProfile: PropTypes.func.isRequired,\r\n    getUserProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {createPictureProfile, getUserProfile}) (withRouter(ProfilePicture))\r\n"]},"metadata":{},"sourceType":"module"}