{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alertAct';\nimport { register } from '../../actions/authActs';\nimport PropTypes from 'prop-types';\nexport const Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    checkPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const name = formData.name,\n        email = formData.email,\n        password = formData.password,\n        checkPassword = formData.checkPassword;\n\n  const setValue = e => {\n    setFormData(_objectSpread({}, formData, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const sentData = async e => {\n    e.preventDefault();\n\n    if (password !== checkPassword) {\n      setAlert('Password dose not match', 'danger', 3000);\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \"Create Account\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => sentData(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => setValue(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => setValue(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    minLength: \"6\",\n    value: password,\n    onChange: e => setValue(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"checkPassword\",\n    minLength: \"6\",\n    value: checkPassword,\n    onChange: e => setValue(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Already have an account?\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"./Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Sign In\")));\n};\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/auth/Register.js"],"names":["React","Fragment","useState","Link","Redirect","connect","setAlert","register","PropTypes","Register","isAuthenticated","name","email","password","checkPassword","formData","setFormData","setValue","e","target","value","sentData","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {setAlert} from '../../actions/alertAct'\r\nimport {register} from '../../actions/authActs'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Register = ({setAlert, register, isAuthenticated}) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        checkPassword: ''\r\n    })\r\n    const {name, email, password, checkPassword} = formData\r\n\r\n    const setValue = e =>{\r\n    setFormData(\r\n        { ...formData, [e.target.name]: e.target.value }\r\n        \r\n    )}\r\n\r\n    const sentData = async e => {\r\n        e.preventDefault()\r\n        if(password !== checkPassword){\r\n            setAlert('Password dose not match', 'danger', 3000)\r\n        } else{\r\n            register({name, email, password})\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    if(isAuthenticated){\r\n        return <Redirect to='/dashboard'/>\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Sign Up</h1>\r\n            <p className= 'lead'><i className='fas fa-user'/>Create Account</p>\r\n            <form className='form' onSubmit={e => sentData(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                     type='text'\r\n                     placeholder='Name'\r\n                     name='name'\r\n                     value={name}\r\n                     onChange = {e => setValue(e)}\r\n                     required\r\n                     />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                     type='email'\r\n                      placeholder='Email Address'\r\n                       name='email'\r\n                       value={email}\r\n                       onChange = {e => setValue(e)}\r\n                       required/>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    minLength='6'\r\n                    value={password}\r\n                    onChange = {e => setValue(e)}\r\n                    required/>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                    type='password'\r\n                    placeholder='Confirm Password'\r\n                    name='checkPassword'\r\n                    minLength='6'\r\n                    value={checkPassword}\r\n                    onChange = {e => setValue(e)}\r\n                    required/>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n            </form>\r\n                <p className=\"my-1\">\r\n                    Already have an account?\r\n                    <br/><Link to='./Login'>Sign In</Link>\r\n                </p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nRegister.propTypes ={\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n }\r\n\r\nconst mapStateToProps = state =>({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {setAlert, register})(Register)\r\n"]},"metadata":{},"sourceType":"module"}