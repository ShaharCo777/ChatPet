{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getUserProfilePicture } from '../../actions/profileActs';\nimport spinner from '../../img/spinner.gif';\nimport DashLinks from './DashLinks';\n\nconst Dashboard = ({\n  getUserProfile,\n  getUserProfilePicture,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    profileImage,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getUserProfile();\n    getUserProfilePicture();\n  }, []);\n  return loading && profile === null ? React.createElement(\"img\", {\n    src: spinner,\n    alt: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Home Page\"), React.createElement(\"div\", {\n    className: \"profileImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Welcome \", user && user.name))), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(DashLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"You don't have a profile,\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"for setting one, please click on \\\"Create Profile\\\"\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/profiles/new\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Create Profile\")));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nDashboard.propTypes = {\n  getUserProfile: PropTypes.func.isRequired,\n  getUserProfilePicture: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserProfilePicture,\n  getUserProfile\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","Link","PropTypes","connect","getUserProfile","getUserProfilePicture","spinner","DashLinks","Dashboard","auth","user","profile","profileImage","loading","name","mapStateToProps","state","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,qBAAxB,QAAoD,2BAApD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACfJ,EAAAA,cADe;AAEfC,EAAAA,qBAFe;AAGfI,EAAAA,IAAI,EAAE;AAACC,IAAAA;AAAD,GAHS;AAIfC,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB;AAJO,CAAD,KAIgC;AAC9Cd,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,cAAc;AACdC,IAAAA,qBAAqB;AACtB,GAHM,EAGJ,EAHI,CAAT;AAKA,SACIQ,OAAO,IAAIF,OAAO,KAAK,IAAvB,GACA;AAAK,IAAA,GAAG,EAAEL,OAAV;AAAmB,IAAA,GAAG,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAEK,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,EAEG;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACSI,IAAI,IAAIA,IAAI,CAACI,IADtB,CADA,CADJ,CAFH,EAOIH,OAAO,KAAK,IAAZ,GACD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADC,GAKD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAFJ,EAE4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF5D,EAGI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,sBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CAZH,CAHT;AAyBH,CAnCD;;AAqCA,MAAMI,eAAe,GAAGC,KAAK,KAAI;AAC7BP,EAAAA,IAAI,EAAEO,KAAK,CAACP,IADiB;AAE7BE,EAAAA,OAAO,EAAEK,KAAK,CAACL;AAFc,CAAJ,CAA7B;;AAKAH,SAAS,CAACS,SAAV,GAAsB;AAClBb,EAAAA,cAAc,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADb;AAElBd,EAAAA,qBAAqB,EAAEH,SAAS,CAACgB,IAAV,CAAeC,UAFpB;AAGlBV,EAAAA,IAAI,EAAEP,SAAS,CAACkB,MAAV,CAAiBD,UAHL;AAIlBR,EAAAA,OAAO,EAAET,SAAS,CAACkB,MAAV,CAAiBD;AAJR,CAAtB;AAOA,eAAehB,OAAO,CAClBY,eADkB,EAElB;AAACV,EAAAA,qBAAD;AAAwBD,EAAAA;AAAxB,CAFkB,CAAP,CAE8BI,SAF9B,CAAf","sourcesContent":["import React, {useEffect, Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {getUserProfile, getUserProfilePicture} from '../../actions/profileActs'\r\nimport spinner from '../../img/spinner.gif'\r\nimport DashLinks from './DashLinks'\r\n\r\nconst Dashboard = ({\r\n    getUserProfile,\r\n    getUserProfilePicture,\r\n    auth: {user},\r\n    profile:{profile, profileImage, loading}}) => {\r\n    useEffect(() => {\r\n        getUserProfile()\r\n        getUserProfilePicture()\r\n      }, [])\r\n\r\n    return (\r\n        loading && profile === null ? \r\n        <img src={spinner} alt='Loading...'\r\n        /> : <Fragment>\r\n                <h1 className='large text-primary'>Home Page</h1>\r\n                <div className='profileImage'>\r\n                    <p className='lead'> \r\n                    <i className='fas fa-user'>\r\n                    Welcome {user && user.name}</i></p>\r\n                </div>\r\n                {profile !== null ? (\r\n                <Fragment>\r\n                    <DashLinks/>\r\n                </Fragment>\r\n                ) :(\r\n                <Fragment>\r\n                    <p>You don't have a profile,</p>\r\n                    <p>for setting one, please click on \"Create Profile\"</p><br/>\r\n                    <Link to='/profiles/new' className='btn btn-primary my-1'>\r\n                        Create Profile\r\n                    </Link>\r\n                </Fragment>\r\n                )}\r\n             </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nDashboard.propTypes = {\r\n    getUserProfile: PropTypes.func.isRequired,\r\n    getUserProfilePicture: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getUserProfilePicture, getUserProfile})(Dashboard)\r\n"]},"metadata":{},"sourceType":"module"}