{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Grid from'@material-ui/core/Grid';import{connect}from'react-redux';import{addPetImages}from'../../actions/petActs';var PetImage=function PetImage(_ref){var addPetImages=_ref.addPetImages,src=_ref.src,pet=_ref.pet;var _useState=useState({src:src,info:''}),_useState2=_slicedToArray(_useState,2),image=_useState2[0],setImage=_useState2[1];useEffect(function(){if(pet!==null)addPetImages(image,pet._id);},[addPetImages,image,pet]);var addInfo=function addInfo(e){setImage(_objectSpread({},image,{info:e.target.value}));};return React.createElement(Grid,{item:true,xs:12,sm:6,lg:4},React.createElement(\"span\",{className:\"petImage\"},React.createElement(\"img\",{src:src,alt:\"pet image\"}),React.createElement(\"textarea\",{placeholder:\"Tell As About The Moment You Took The Photo \",onChange:function onChange(e){return addInfo(e);}})));};var mapStateToProps=function mapStateToProps(state){return{pet:state.pets.pet};};export default connect(mapStateToProps,{addPetImages:addPetImages})(PetImage);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/PetProfile/PetImage.js"],"names":["React","useEffect","useState","Grid","connect","addPetImages","PetImage","src","pet","info","image","setImage","_id","addInfo","e","target","value","mapStateToProps","state","pets"],"mappings":"2XAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CAEA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAEA,OAAQC,YAAR,KAA2B,uBAA3B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAIP,IAHED,CAAAA,YAGF,MAHEA,YAGF,CAFEE,GAEF,MAFEA,GAEF,CADEC,GACF,MADEA,GACF,eAEoBN,QAAQ,CAC1B,CACAK,GAAG,CAAEA,GADL,CAEAE,IAAI,CAAE,EAFN,CAD0B,CAF5B,wCAECC,KAFD,eAEQC,QAFR,eAQNV,SAAS,CAAC,UAAM,CACR,GAAGO,GAAG,GAAK,IAAX,CAAiBH,YAAY,CAACK,KAAD,CAAQF,GAAG,CAACI,GAAZ,CAAZ,CAChB,CAFA,CAEE,CAACP,YAAD,CAAeK,KAAf,CAAsBF,GAAtB,CAFF,CAAT,CAIA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,CAAD,CAAM,CAClBH,QAAQ,kBAAKD,KAAL,EAAYD,IAAI,CAAEK,CAAC,CAACC,MAAF,CAASC,KAA3B,GAAR,CACH,CAFD,CAGA,MACI,qBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,EAAE,CAAE,CAA9B,EACI,4BAAM,SAAS,CAAC,UAAhB,EACA,2BAAM,GAAG,CAAET,GAAX,CAAgB,GAAG,CAAC,WAApB,EADA,CAEA,gCAAU,WAAW,CAAC,8CAAtB,CACD,QAAQ,CAAE,kBAACO,CAAD,QAAOD,CAAAA,OAAO,CAACC,CAAD,CAAd,EADT,EAFA,CADJ,CADJ,CASH,CA5BD,CA8BA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAI,CAC7BV,GAAG,CAAEU,KAAK,CAACC,IAAN,CAAWX,GADa,CAAJ,EAA7B,CAWA,cAAeJ,CAAAA,OAAO,CAACa,eAAD,CAClB,CAACZ,YAAY,CAAZA,YAAD,CADkB,CAAP,CACKC,QADL,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {addPetImages} from '../../actions/petActs'\r\n\r\nconst PetImage = ( {\r\n            addPetImages,\r\n            src,\r\n            pet\r\n    }) => {\r\n\r\n    const [image, setImage] = useState(\r\n            {\r\n            src: src,\r\n            info: ''\r\n          })\r\n\r\n    useEffect(() => {\r\n            if(pet !== null) addPetImages(image, pet._id)\r\n            }, [addPetImages, image, pet])\r\n        \r\n    const addInfo = (e) =>{\r\n        setImage({...image, info: e.target.value})\r\n    }\r\n    return (\r\n        <Grid item xs={12} sm={6} lg={4} >\r\n            <span className='petImage'>\r\n            <img  src={src} alt='pet image'/>\r\n            <textarea placeholder=\"Tell As About The Moment You Took The Photo \" \r\n           onChange={(e) => addInfo(e)}></textarea> \r\n           </span>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    pet: state.pets.pet\r\n})\r\n\r\nPetImage.propTypes = {\r\n    image: PropTypes.object.isRequired,\r\n    pet: PropTypes.object.isRequired,\r\n    addPetImages: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {addPetImages})(PetImage)\r\n"]},"metadata":{},"sourceType":"module"}