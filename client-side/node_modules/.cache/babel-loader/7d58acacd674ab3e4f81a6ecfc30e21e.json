{"ast":null,"code":"// import React, {useEffect, Fragment} from 'react'\n// import {Link} from 'react-router-dom'\n// import PropTypes from 'prop-types'\n// import {connect} from 'react-redux'\n// import {getUserPets} from '../../../actions/petActs'\n// import {\n//     getUserProfile,\n//     deleteAccount \n// } from '../../../actions/profileActs'\n// import spinner from '../../../img/spinner.gif'\n// const UserPets = ({\n//     getUserPets,\n//     deleteAccount,\n//     auth: {user},\n//     profile:{\n//         loading,\n//          profile:{\n//              profile,\n//              profilePets\n//          }\n//          }}) => {\n//     useEffect(() => {\n//         getUserPets()\n//       }, [])\n//     return (\n//         loading && profile === null ? \n//         <img src={spinner} alt='Loading...'\n//         /> : <Fragment >\n//             <Link to='/profiles/profilePicture/update'>\n//             <span className='profileImage'>\n//             <button>Edit</button>\n//              <img  src={profile && profile.profileImage ? (\n//                  profile.profileImage):(user && user.avatar)} />\n//              </span> </Link>\n//              <h1 className='large text-primary'>Home Page</h1>\n//                     <p className='lead'>\n//                     <i className='fas fa-user'></i>\n//                     Welcome to {profilePets && profilePets.name} page</p>\n//                 {profile && profile.birthDay ? (\n//                 <Fragment>\n//                     {profilePets ? ( profilePets.forEach(pet => \n//                       <Link to={`/profiles/me/pet/${pet.id}`}>  \n//                       <img  src={pet.profileImage}/> \n//                       </Link>\n//                     )) : (null)}\n//                 </Fragment>\n//                 ) :(\n//                 <Fragment>\n//                 </Fragment>\n//                 )}\n//                 <div className='my-2'>\n//                 <button className='btn btn-danger' onClick={() => deleteAccount()}>\n//                      Delete My Account\n//                 </button>\n//                 </div>\n//              </Fragment>\n//     )\n// }\n// const mapStateToProps = state =>({\n//     auth: state.auth,\n//     profile: state.profile\n// })\n// UserPets.propTypes = {\n//     getUserProfile: PropTypes.func.isRequired,\n//     deleteAccount: PropTypes.func.isRequired,\n//     auth: PropTypes.object.isRequired,\n//     profile: PropTypes.object.isRequired,\n// }\n// export default connect(\n//     mapStateToProps,\n//     { getUserProfile, deleteAccount})(UserPets)","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/PetProfile/showPets/UseresPets.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import React, {useEffect, Fragment} from 'react'\r\n// import {Link} from 'react-router-dom'\r\n// import PropTypes from 'prop-types'\r\n// import {connect} from 'react-redux'\r\n// import {getUserPets} from '../../../actions/petActs'\r\n// import {\r\n//     getUserProfile,\r\n//     deleteAccount \r\n// } from '../../../actions/profileActs'\r\n// import spinner from '../../../img/spinner.gif'\r\n\r\n// const UserPets = ({\r\n//     getUserPets,\r\n//     deleteAccount,\r\n//     auth: {user},\r\n//     profile:{\r\n//         loading,\r\n//          profile:{\r\n//              profile,\r\n//              profilePets\r\n//          }\r\n//          }}) => {\r\n//     useEffect(() => {\r\n//         getUserPets()\r\n//       }, [])\r\n\r\n//     return (\r\n//         loading && profile === null ? \r\n//         <img src={spinner} alt='Loading...'\r\n//         /> : <Fragment >\r\n//             <Link to='/profiles/profilePicture/update'>\r\n//             <span className='profileImage'>\r\n//             <button>Edit</button>\r\n//              <img  src={profile && profile.profileImage ? (\r\n//                  profile.profileImage):(user && user.avatar)} />\r\n//              </span> </Link>\r\n//              <h1 className='large text-primary'>Home Page</h1>\r\n//                     <p className='lead'>\r\n//                     <i className='fas fa-user'></i>\r\n//                     Welcome to {profilePets && profilePets.name} page</p>\r\n//                 {profile && profile.birthDay ? (\r\n//                 <Fragment>\r\n//                     {profilePets ? ( profilePets.forEach(pet => \r\n//                       <Link to={`/profiles/me/pet/${pet.id}`}>  \r\n//                       <img  src={pet.profileImage}/> \r\n//                       </Link>\r\n//                     )) : (null)}\r\n//                 </Fragment>\r\n//                 ) :(\r\n//                 <Fragment>\r\n//                 </Fragment>\r\n//                 )}\r\n//                 <div className='my-2'>\r\n//                 <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n//                      Delete My Account\r\n//                 </button>\r\n//                 </div>\r\n//              </Fragment>\r\n//     )\r\n// }\r\n\r\n// const mapStateToProps = state =>({\r\n//     auth: state.auth,\r\n//     profile: state.profile\r\n// })\r\n\r\n// UserPets.propTypes = {\r\n//     getUserProfile: PropTypes.func.isRequired,\r\n//     deleteAccount: PropTypes.func.isRequired,\r\n//     auth: PropTypes.object.isRequired,\r\n//     profile: PropTypes.object.isRequired,\r\n// }\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     { getUserProfile, deleteAccount})(UserPets)\r\n"]},"metadata":{},"sourceType":"module"}