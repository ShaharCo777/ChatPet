{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { GET_POSTS, POST_ERROR, GET_POST, ADD_POST, DELETE_POST, UPDATE_LIKES, ADD_COMMENT, REMOVE_COMMENT } from '../actions/consts';\nconst inItialState = {\n  posts: [],\n  post: null,\n  comments: [],\n  loading: true,\n  error: {}\n};\nexport default function (state = inItialState, action) {\n  const type = action.type,\n        data = action.data;\n\n  switch (type) {\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: data,\n        loading: false\n      });\n\n    case GET_POST:\n      return _objectSpread({}, state, {\n        post: data,\n        loading: false\n      });\n\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        posts: [data, ...state.posts],\n        loading: false\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(post => post._id !== data),\n        loading: false\n      });\n\n    case UPDATE_LIKES:\n      return _objectSpread({}, state, {\n        posts: state.posts.map(post => post._id === data.postId ? _objectSpread({}, post, {\n          likes: data.likes\n        }) : post),\n        loading: false\n      });\n\n    case POST_ERROR:\n      return _objectSpread({}, state, {\n        error: data,\n        loading: false\n      });\n\n    case ADD_COMMENT:\n      return _objectSpread({}, state, {\n        post: _objectSpread({}, state.post, {\n          comments: [data, ...state.post.comments]\n        }),\n        loading: false\n      });\n\n    case REMOVE_COMMENT:\n      return _objectSpread({}, state, {\n        post: _objectSpread({}, state.post, {\n          comments: state.post.comments.filter(comment => comment._id !== data)\n        }),\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","GET_POST","ADD_POST","DELETE_POST","UPDATE_LIKES","ADD_COMMENT","REMOVE_COMMENT","inItialState","posts","post","comments","loading","error","state","action","type","data","filter","_id","map","postId","likes","comment"],"mappings":";AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,QAHJ,EAIIC,QAJJ,EAKIC,WALJ,EAMIC,YANJ,EAOIC,WAPJ,EAQIC,cARJ,QASO,mBATP;AAWA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,IAAI,EAAE,IAFU;AAGhBC,EAAAA,QAAQ,EAAE,EAHM;AAIhBC,EAAAA,OAAO,EAAE,IAJO;AAKhBC,EAAAA,KAAK,EAAE;AALS,CAApB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AAAA,QAC3CC,IAD2C,GAC7BD,MAD6B,CAC3CC,IAD2C;AAAA,QACrCC,IADqC,GAC7BF,MAD6B,CACrCE,IADqC;;AAGlD,UAAOD,IAAP;AACI,SAAKhB,SAAL;AACI,+BACGc,KADH;AAEAL,QAAAA,KAAK,EAAEQ,IAFP;AAGAL,QAAAA,OAAO,EAAE;AAHT;;AAKJ,SAAKV,QAAL;AACI,+BACOY,KADP;AAEIJ,QAAAA,IAAI,EAAEO,IAFV;AAGIL,QAAAA,OAAO,EAAC;AAHZ;;AAKJ,SAAKT,QAAL;AACI,+BACOW,KADP;AAEIL,QAAAA,KAAK,EAAE,CAACQ,IAAD,EAAO,GAAGH,KAAK,CAACL,KAAhB,CAFX;AAGIG,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKR,WAAL;AACI,+BACOU,KADP;AAEIL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYS,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaF,IAAxC,CAFX;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKP,YAAL;AACI,+BACOS,KADP;AAEIL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAgBV,IAAI,IACvBA,IAAI,CAACS,GAAL,KAAaF,IAAI,CAACI,MAAlB,qBACIX,IADJ;AACUY,UAAAA,KAAK,EAAEL,IAAI,CAACK;AADtB,aAC+BZ,IAF5B,CAFX;AAKIE,QAAAA,OAAO,EAAE;AALb;;AAOJ,SAAKX,UAAL;AACI,+BACOa,KADP;AAEID,QAAAA,KAAK,EAAEI,IAFX;AAGIL,QAAAA,OAAO,EAAC;AAHZ;;AAKJ,SAAKN,WAAL;AACI,+BACOQ,KADP;AAEIJ,QAAAA,IAAI,oBAAMI,KAAK,CAACJ,IAAZ;AAAkBC,UAAAA,QAAQ,EAAE,CAACM,IAAD,EAAO,GAAGH,KAAK,CAACJ,IAAN,CAAWC,QAArB;AAA5B,UAFR;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKL,cAAL;AACI,+BACOO,KADP;AAEIJ,QAAAA,IAAI,oBACGI,KAAK,CAACJ,IADT;AAECC,UAAAA,QAAQ,EAAEG,KAAK,CAACJ,IAAN,CAAWC,QAAX,CAAoBO,MAApB,CAA2BK,OAAO,IAC5CA,OAAO,CAACJ,GAAR,KAAgBF,IADN;AAFX,UAFR;AAMSL,QAAAA,OAAO,EAAE;AANlB;;AAQJ;AACI,aAAOE,KAAP;AAvDR;AAyDH","sourcesContent":["import{\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    GET_POST,\r\n    ADD_POST,\r\n    DELETE_POST,\r\n    UPDATE_LIKES,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/consts'\r\n\r\nconst inItialState ={\r\n    posts: [],\r\n    post: null,\r\n    comments: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = inItialState, action) {\r\n    const {type, data} = action\r\n\r\n    switch(type) {\r\n        case GET_POSTS:\r\n            return{\r\n            ...state,\r\n            posts: data,\r\n            loading: false\r\n            }\r\n        case GET_POST:\r\n            return{\r\n                ...state,\r\n                post: data,\r\n                loading:false\r\n            }\r\n        case ADD_POST:\r\n            return{\r\n                ...state,\r\n                posts: [data, ...state.posts],\r\n                loading: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== data),\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return{\r\n                ...state,\r\n                posts: state.posts.map(post => \r\n                    post._id === data.postId ? \r\n                    {...post, likes: data.likes} : post),\r\n                loading: false\r\n            }\r\n        case POST_ERROR:\r\n            return{\r\n                ...state,\r\n                error: data,\r\n                loading:false\r\n            }\r\n        case ADD_COMMENT:\r\n            return{\r\n                ...state,\r\n                post: {...state.post, comments: [data, ...state.post.comments]},\r\n                loading: false\r\n            }\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post:{\r\n                    ...state.post,\r\n                     comments: state.post.comments.filter(comment =>\r\n                     comment._id !== data )},\r\n                     loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}