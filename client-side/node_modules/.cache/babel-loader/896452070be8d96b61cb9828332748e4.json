{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\PetProfile\\\\showPets\\\\PetProfile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPetById, getPetPhotos } from '../../../actions/petActs';\nimport { connect } from 'react-redux';\nimport spinner from '../../../img/spinner.gif';\n\nfunction PetProfile({\n  getPetById,\n  getPetPhotos,\n  pet: {\n    pet,\n    loading\n  },\n  match\n}) {\n  useEffect(() => {\n    getPetById(match.params.petId);\n  }, [getPetById, match.params.petId]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, pet === null || loading ? React.createElement(\"img\", {\n    src: spinner,\n    alt: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, pet.name)));\n}\n\nconst mapStateToProps = state => ({\n  pet: state.pets\n});\n\nPetProfile.propTypes = {\n  getPetById: PropTypes.func.isRequired,\n  getPetPhotos: PropTypes.func.isRequired,\n  pet: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  getPetById,\n  getPetPhotos\n})(PetProfile);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/PetProfile/showPets/PetProfile.js"],"names":["React","Fragment","useEffect","PropTypes","getPetById","getPetPhotos","connect","spinner","PetProfile","pet","loading","match","params","petId","name","mapStateToProps","state","pets","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,0BAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAIA,SAASC,UAAT,CAAoB;AAChBJ,EAAAA,UADgB;AAEhBC,EAAAA,YAFgB;AAGhBI,EAAAA,GAAG,EAAC;AACAA,IAAAA,GADA;AAEAC,IAAAA;AAFA,GAHY;AAOhBC,EAAAA;AAPgB,CAApB,EAQG;AACHT,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACC,GAFI,EAEF,CAACT,UAAD,EAAaO,KAAK,CAACC,MAAN,CAAaC,KAA1B,CAFE,CAAT;AAKI,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,GAAG,KAAK,IAAR,IAAgBC,OAAhB,GACG;AAAK,IAAA,GAAG,EAAEH,OAAV;AAAmB,IAAA,GAAG,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAGD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,GAAG,CAACK,IAAT,CADJ,CAJA,CADJ;AAUH;;AAED,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC7BP,EAAAA,GAAG,EAAEO,KAAK,CAACC;AADkB,CAAJ,CAA7B;;AAIAT,UAAU,CAACU,SAAX,GAAuB;AACvBd,EAAAA,UAAU,EAAED,SAAS,CAACgB,IAAV,CAAeC,UADJ;AAEvBf,EAAAA,YAAY,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UAFN;AAGvBX,EAAAA,GAAG,EAAEN,SAAS,CAACkB,MAAV,CAAiBD;AAHC,CAAvB;AAMA,eAAed,OAAO,CAACS,eAAD,EAClB;AAACX,EAAAA,UAAD;AAAcC,EAAAA;AAAd,CADkB,CAAP,CAETG,UAFS,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getPetById, getPetPhotos } from '../../../actions/petActs'\r\nimport {connect} from 'react-redux'\r\nimport spinner from '../../../img/spinner.gif';\r\n\r\n\r\n\r\nfunction PetProfile({\r\n    getPetById,\r\n    getPetPhotos,\r\n    pet:{\r\n        pet,\r\n        loading\r\n    },\r\n    match\r\n}) {\r\nuseEffect(() => {\r\n    getPetById(match.params.petId)\r\n    }, [getPetById, match.params.petId])\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        {pet === null || loading ? (\r\n            <img src={spinner} alt='Loading...'/>\r\n            ) : (\r\n        <Fragment>\r\n            <h1>{pet.name}</h1>\r\n        </Fragment>)}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    pet: state.pets\r\n})\r\n\r\nPetProfile.propTypes = {\r\ngetPetById: PropTypes.func.isRequired,\r\ngetPetPhotos: PropTypes.func.isRequired,\r\npet: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {getPetById,  getPetPhotos}\r\n    )(PetProfile)\r\n\r\n"]},"metadata":{},"sourceType":"module"}