{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import{createPet}from'../../../actions/petActs';import Dropzone from'../../imageSetting/Dropezone';import PetImage from'../PetImage';import Grid from'@material-ui/core/Grid';var CreatePetProfile=function CreatePetProfile(_ref){var createPet=_ref.createPet,history=_ref.history;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),images=_useState2[0],setImages=_useState2[1];var _useState3=useState({profileImage:'',name:'',sex:'',type:'',race:'',age:null,descreption:'',traind:false,cost:''}),_useState4=_slicedToArray(_useState3,2),petFormData=_useState4[0],setPetFormData=_useState4[1];var getBase64=function getBase64(image){return new Promise(function(resolve,reject){var reader=new FileReader();reader.onload=function(){return resolve(reader.result);};reader.onerror=function(error){return reject(error);};reader.readAsDataURL(image);});};var _onDrop=function onDrop(e){return _regeneratorRuntime.async(function onDrop$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setImages;_context.t1=[];_context.t2=_toConsumableArray(images);_context.t3=images.length;_context.next=6;return _regeneratorRuntime.awrap(getBase64(e[0]));case 6:_context.t4=_context.sent;_context.t5={id:_context.t3,src:_context.t4};_context.t6=[_context.t5];_context.t7=_context.t1.concat.call(_context.t1,_context.t2,_context.t6);(0,_context.t0)(_context.t7);if(images[0])setPetFormData(_objectSpread({},petFormData,{profileImage:images[0].src}));case 12:case\"end\":return _context.stop();}}});};var _onChange=function onChange(e){setPetFormData(_objectSpread({},petFormData,_defineProperty({},e.target.name,e.target.value)));};var sentData=function sentData(e){return _regeneratorRuntime.async(function sentData$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();_context2.next=3;return _regeneratorRuntime.awrap(createPet(petFormData,history));case 3:case\"end\":return _context2.stop();}}});};return React.createElement(Fragment,null,React.createElement(\"section\",{className:\"container\"},React.createElement(\"h1\",{className:\"large text-primary\"},\"Create Your Pet Profile\"),React.createElement(\"p\",{className:\"lead\"},React.createElement(\"i\",{className:\"fas fa-pet\"}),\" Let's get some information about your pet\"),React.createElement(\"small\",null,\"* = required field\"),React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){return sentData(e);}},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"* Pet's Name\",name:\"name\",onChange:function onChange(e){return _onChange(e);}}),React.createElement(\"small\",{className:\"form-text\"},\"This is how your pet will be presented\")),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"select\",{name:\"sex\",onChange:function onChange(e){return _onChange(e);}},React.createElement(\"option\",{value:\"0\"},\"* Select Your Pet Gender\"),React.createElement(\"option\",{value:\"male\"},\"Male\"),React.createElement(\"option\",{value:\"female\"},\"female\"),React.createElement(\"option\",{value:\"other\"},\"Other\"))),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"Pet's Type\",name:\"type\",onChange:function onChange(e){return _onChange(e);}}),React.createElement(\"small\",{className:\"form-text\"},\"What Kind Of Animal Is It?\")),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",placeholder:\"Pet's Race\",name:\"race\",onChange:function onChange(e){return _onChange(e);}}),React.createElement(\"small\",{className:\"form-text\"},\"Only If You Know\")),React.createElement(\"label\",{className:\"checkBox\"},\"Is Your Pet Traind?\",React.createElement(\"input\",{type:\"checkbox\",name:\"traind\",onChange:function onChange(){setPetFormData(_objectSpread({},petFormData,{traind:!petFormData.traind}));}}),React.createElement(\"span\",{className:\"checkmark\"})),React.createElement(Grid,{container:true,spacing:3},images.length>0&&images.map(function(image){return React.createElement(PetImage,{src:image.src});})),images.length<10?React.createElement(Dropzone,{onDrop:function onDrop(e){return _onDrop(e);},multiple:false,style:'smlDropzone'}):React.createElement(\"h3\",{style:{color:'red'}},\"Sorry, we cant afford more then 9 pics for a pet..\"),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"textarea\",{placeholder:\"Add More Info..\",name:\"general\",onChange:function onChange(e){return _onChange(e);}}),React.createElement(\"small\",{className:\"form-text\"},\"Add what ever you want\")),React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary my-1\"}),React.createElement(\"a\",{className:\"btn btn-light my-1\"},\"Go Back\"))));};export default connect(null,{createPet:createPet})(withRouter(CreatePetProfile));","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/PetProfile/forms/CreatePetProfile.js"],"names":["React","Fragment","useState","connect","withRouter","createPet","Dropzone","PetImage","Grid","CreatePetProfile","history","images","setImages","profileImage","name","sex","type","race","age","descreption","traind","cost","petFormData","setPetFormData","getBase64","image","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","onDrop","e","length","id","src","onChange","target","value","sentData","preventDefault","map","color"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {createPet} from '../../../actions/petActs'\r\n\r\n\r\nimport Dropzone from '../../imageSetting/Dropezone'\r\nimport PetImage from '../PetImage'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\nconst CreatePetProfile = ({createPet, history}) => {\r\n  const [images, setImages] = useState([])  \r\n  const [petFormData, setPetFormData] = useState({\r\n      profileImage:'',\r\n      name:'',\r\n      sex:'',\r\n      type:'',\r\n      race:'',\r\n      age:null,\r\n      descreption:'',\r\n      traind:false,\r\n      cost:''\r\n  })\r\n\r\n  const getBase64 = (image) => {\r\n    return new Promise((resolve,reject) => {\r\n      const reader = new FileReader()\r\n      reader.onload = () => resolve(reader.result)\r\n      reader.onerror = error => reject(error)\r\n      reader.readAsDataURL(image)\r\n  })}\r\n\r\n  const onDrop =async e =>{\r\n    setImages([\r\n      ...images,{\r\n       id: images.length,\r\n       src: await getBase64(e[0])\r\n      }\r\n      ])\r\n    if(images[0]) setPetFormData({...petFormData, profileImage: images[0].src})\r\n  }\r\n\r\n    const onChange = e =>{\r\n      setPetFormData({...petFormData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n\r\n\r\n    const sentData = async e =>{\r\n      e.preventDefault()\r\n      await createPet(petFormData, history)\r\n    }\r\n\r\n\r\n return (\r\n  <Fragment>\r\n  <section className=\"container\">\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Pet Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-pet\"></i> Let's get some information about your pet\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit= {e => sentData(e)}>\r\n      <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Pet's Name\"\r\n           name=\"name\" onChange={(e) => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >This is how your pet will be presented\r\n            </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <select name=\"sex\" onChange={(e) => onChange(e)}>\r\n            <option value=\"0\">* Select Your Pet Gender</option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">female</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Pet's Type\" \r\n          name=\"type\" onChange={(e) => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >What Kind Of Animal Is It?</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Pet's Race\" \r\n          name=\"race\" onChange={(e) => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Only If You Know</small>\r\n        </div>\r\n        <label className=\"checkBox\">Is Your Pet Traind?\r\n        <input type=\"checkbox\"\r\n         name='traind'\r\n         onChange={() =>{\r\n        setPetFormData({...petFormData, traind: !petFormData.traind})}}/>\r\n        <span className=\"checkmark\"></span>\r\n        </label>\r\n\r\n      <Grid container spacing={3}>\r\n        {images.length > 0 && images.map(image =>(\r\n          <PetImage\r\n           src={image.src} \r\n           /> ))}\r\n      </Grid>\r\n        {images.length < 10 ? (\r\n        <Dropzone \r\n        onDrop={(e) => onDrop(e)}  \r\n        multiple={false}\r\n        style={'smlDropzone'}/>\r\n        ):(<h3 style = {{color:'red'}}\r\n        >Sorry, we cant afford more then 9 pics for a pet..</h3>)}\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"Add More Info..\" \r\n          name=\"general\" onChange={(e) => onChange(e)}/>\r\n          <small className=\"form-text\">Add what ever you want</small>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" >Go Back</a>\r\n      </form>\r\n    </section>\r\n    </Fragment>\r\n)}\r\n\r\nCreatePetProfile.propTypes = {\r\n  createPet: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null,\r\n  {createPet}) (withRouter(CreatePetProfile))\r\n"]},"metadata":{},"sourceType":"module"}