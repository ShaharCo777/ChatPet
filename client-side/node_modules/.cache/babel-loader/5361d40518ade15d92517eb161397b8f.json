{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\PetProfile\\\\showPets\\\\UseresPets.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getUserPets } from '../../actions/petsActs';\nimport { getUserProfile, deleteAccount } from '../../actions/profileActs';\nimport spinner from '../../img/spinner.gif';\nimport DashLinks from './DashLinks';\n\nconst UserPets = ({\n  getUserPets,\n  deleteAccount,\n  auth: {\n    user\n  },\n  profile: {\n    loading,\n    profile: {\n      profile,\n      profilePets\n    }\n  }\n}) => {\n  useEffect(() => {\n    getUserPets();\n  }, []);\n  return loading && profile === null ? React.createElement(\"img\", {\n    src: spinner,\n    alt: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles/profilePicture/update\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"profileImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"img\", {\n    src: profile && profile.profileImage ? profile.profileImage : user && user.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), \" \"), React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Home Page\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \"Welcome to \", profilePets && profilePets.name, \" page\"), profile && profile.birthDay ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, profilePets ? profilePets.forEach(pet => {\n    React.createElement(Link, {\n      to: `/profiles/me/pet/${pet.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: pet.profileImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }) : null, React.createElement(DashLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"You don't have a profile,\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"for setting one, please click on \\\"Create Profile\\\"\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/profiles/new\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Create Profile\")), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Delete My Account\")));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nUserPets.propTypes = {\n  getUserProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserProfile,\n  deleteAccount\n})(UserPets);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/PetProfile/showPets/UseresPets.js"],"names":["React","useEffect","Fragment","Link","PropTypes","connect","getUserPets","getUserProfile","deleteAccount","spinner","DashLinks","UserPets","auth","user","profile","loading","profilePets","profileImage","avatar","name","birthDay","forEach","pet","id","mapStateToProps","state","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {getUserPets} from '../../actions/petsActs'\r\nimport {\r\n    getUserProfile,\r\n    deleteAccount \r\n} from '../../actions/profileActs'\r\nimport spinner from '../../img/spinner.gif'\r\nimport DashLinks from './DashLinks'\r\n\r\nconst UserPets = ({\r\n    getUserPets,\r\n    deleteAccount,\r\n    auth: {user},\r\n    profile:{\r\n        loading,\r\n         profile:{\r\n             profile,\r\n             profilePets\r\n         }\r\n         }}) => {\r\n    useEffect(() => {\r\n        getUserPets()\r\n      }, [])\r\n\r\n    return (\r\n        loading && profile === null ? \r\n        <img src={spinner} alt='Loading...'\r\n        /> : <Fragment >\r\n            <Link to='/profiles/profilePicture/update'>\r\n            <span className='profileImage'>\r\n            <button>Edit</button>\r\n             <img  src={profile && profile.profileImage ? (\r\n                 profile.profileImage):(user && user.avatar)} />\r\n             </span> </Link>\r\n             <h1 className='large text-primary'>Home Page</h1>\r\n                    <p className='lead'>\r\n                    <i className='fas fa-user'></i>\r\n                    Welcome to {profilePets && profilePets.name} page</p>\r\n                {profile && profile.birthDay ? (\r\n                <Fragment>\r\n                    {profilePets ? ( profilePets.forEach(pet => {\r\n                      <Link to={`/profiles/me/pet/${pet.id}`}>  \r\n                      <img  src={pet.profileImage}/> \r\n                      </Link>\r\n                    })) : (null)}\r\n                    <DashLinks/>\r\n                </Fragment>\r\n                ) :(\r\n                <Fragment>\r\n                    <p>You don't have a profile,</p>\r\n                    <p>for setting one, please click on \"Create Profile\"</p><br/>\r\n                    <Link to='/profiles/new' className='btn btn-primary my-1'>\r\n                        Create Profile\r\n                    </Link>\r\n                </Fragment>\r\n                )}\r\n                <div className='my-2'>\r\n                <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n                     Delete My Account\r\n                </button>\r\n                </div>\r\n             </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nUserPets.propTypes = {\r\n    getUserProfile: PropTypes.func.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getUserProfile, deleteAccount})(UserPets)\r\n"]},"metadata":{},"sourceType":"module"}