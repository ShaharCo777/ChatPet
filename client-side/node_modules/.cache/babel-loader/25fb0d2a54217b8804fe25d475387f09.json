{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alertAct';\nimport { GET_POSTS, GET_POST, ADD_POST, DELETE_POST, POST_ERROR, UPDATE_LIKES } from './consts'; //get all the posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      data: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      data: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n}; //get spesific the post\n\nexport const getPost = post => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      data: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      data: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n}; // add like\n\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      data: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      data: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n}; // remove like\n\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      data: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      data: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n}; // delete post\n\nexport const deletePost = postId => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      data: postId\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      data: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n}; // add post\n\nexport const addPost = post => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/posts', post, config);\n    dispatch({\n      type: ADD_POST,\n      data: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      data: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/actions/postActs.js"],"names":["axios","setAlert","GET_POSTS","GET_POST","ADD_POST","DELETE_POST","POST_ERROR","UPDATE_LIKES","getPosts","dispatch","res","get","type","data","err","msg","status","getPost","post","addLike","postId","put","likes","removeLike","deletePost","delete","addPost","config","headers"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { setAlert} from './alertAct'\r\nimport {\r\n    GET_POSTS,\r\n    GET_POST,\r\n    ADD_POST,\r\n    DELETE_POST,\r\n    POST_ERROR,\r\n    UPDATE_LIKES\r\n} from './consts'\r\n\r\n\r\n//get all the posts\r\nexport const getPosts = () => async dispatch =>{\r\n    try {\r\n        const res = await axios.get('/api/posts')\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            data: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//get spesific the post\r\nexport const getPost = post => async dispatch =>{\r\n    try {\r\n        const res = await axios.get('/api/posts')\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            data: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// add like\r\nexport const addLike = postId => async dispatch =>{\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${postId}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            data: {postId, likes: res.data}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// remove like\r\nexport const removeLike = postId => async dispatch =>{\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${postId}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            data: {postId, likes: res.data}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// delete post\r\nexport const deletePost = postId => async dispatch =>{\r\n    try {\r\n        await axios.delete(`/api/posts/${postId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            data: postId\r\n        })\r\n\r\n        dispatch(setAlert('Post Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// add post\r\nexport const addPost = post => async dispatch =>{    \r\n    try {\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n\r\n        const res = await axios.post('/api/posts', post, config)\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            data: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Post Created', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            data: { \r\n                msg: err,\r\n                status: err\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}