{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alertAct';\nimport { GET_PET, GET_PETS, PET_ERROR, PET_PHOTOS } from './consts'; //create or updite pet profile\n\nexport const createPet = (petFormData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('http://localhost:5000/api/pets', petFormData, config);\n    dispatch({\n      type: GET_PET,\n      data: res.data\n    });\n    dispatch(setAlert(edit ? 'Pet Profile Updated' : 'Pet Profile Created', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PET_ERROR,\n      data: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add photos to pet\n\nexport const addPetImages = (image, id) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const data = {\n    image: image,\n    petId: id\n  };\n  console.log(data);\n\n  try {\n    await axios.post('http://localhost:5000/api/pets/photos', data, config);\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => setAlert(error.msg, 'danger'));\n    }\n\n    dispatch({\n      type: PET_ERROR,\n      data: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // get all the user pets\n\nexport const getUserPets = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:5000/api/pets');\n    dispatch({\n      type: GET_PETS,\n      data: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PET_ERROR,\n      data: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //  pet photos by petId\n\nexport const getPetPhotos = petId => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:5000/api/pets/${petId}/photos`);\n    console.log(res.data);\n    dispatch({\n      type: PET_PHOTOS,\n      data: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PET_ERROR,\n      data: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/actions/petActs.js"],"names":["axios","setAlert","GET_PET","GET_PETS","PET_ERROR","PET_PHOTOS","createPet","petFormData","history","edit","dispatch","config","headers","res","post","type","data","push","err","errors","response","forEach","error","msg","statusText","status","addPetImages","image","id","petId","console","log","getUserPets","get","getPetPhotos"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {setAlert} from './alertAct'\r\nimport{\r\n    GET_PET,\r\n    GET_PETS,\r\n    PET_ERROR,\r\n    PET_PHOTOS\r\n  } from './consts'\r\n\r\n\r\n//create or updite pet profile\r\nexport const createPet = (petFormData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n\r\n        const res = await axios.post('http://localhost:5000/api/pets', petFormData, config)\r\n\r\n         dispatch({\r\n            type: GET_PET,\r\n            data: res.data\r\n        })\r\n\r\n        dispatch(setAlert(edit ? 'Pet Profile Updated' : 'Pet Profile Created', 'success'))\r\n\r\n        history.push('/dashboard')\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n  \r\n        if (errors) {\r\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PET_ERROR,\r\n            data: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//add photos to pet\r\nexport const addPetImages = (image, id)  => async dispatch =>{\r\n\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    const data ={\r\n        image: image,\r\n        petId: id\r\n        }\r\n    console.log(data)\r\n\r\n    try {\r\n        await axios.post('http://localhost:5000/api/pets/photos', data, config)\r\n      } catch (err) {\r\n        const errors = err.response.data.errors;\r\n  \r\n        if (errors) {\r\n          errors.forEach(error => setAlert(error.msg, 'danger'))\r\n        }\r\n        dispatch({\r\n            type: PET_ERROR,\r\n            data: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n      }\r\n}\r\n\r\n\r\n// get all the user pets\r\n    export const getUserPets = () => async dispatch => {\r\n      try{\r\n        const res = await axios.get('http://localhost:5000/api/pets')\r\n      \r\n          dispatch({\r\n              type: GET_PETS,\r\n              data: res.data\r\n          })\r\n      } catch (err){\r\n          dispatch({\r\n              type: PET_ERROR,\r\n              data: {\r\n                  msg: err.response.statusText,\r\n                  status: err.response.status\r\n          }\r\n          })\r\n        }\r\n      }\r\n\r\n//  pet photos by petId\r\nexport const getPetPhotos = petId => async dispatch => {\r\n  try{\r\n    const res = await axios.get(`http://localhost:5000/api/pets/${petId}/photos`)\r\n      console.log(res.data)\r\n      dispatch({\r\n          type: PET_PHOTOS,\r\n          data: res.data\r\n      })\r\n  } catch (err){\r\n      dispatch({\r\n          type: PET_ERROR,\r\n          data: {\r\n              msg: err.response.statusText,\r\n              status: err.response.status\r\n      }\r\n      })\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}