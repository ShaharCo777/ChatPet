{"ast":null,"code":"import React,{Fragment}from'react';import{Link}from'react-router-dom';import Moment from'react-moment';import{connect}from'react-redux';import{addLike,removeLike,deletePost}from'../../../actions/postActs';var PostItem=function PostItem(_ref){var addLike=_ref.addLike,removeLike=_ref.removeLike,deletePost=_ref.deletePost,auth=_ref.auth,_ref$post=_ref.post,_id=_ref$post._id,text=_ref$post.text,name=_ref$post.name,avatar=_ref$post.avatar,user=_ref$post.user,likes=_ref$post.likes,comments=_ref$post.comments,date=_ref$post.date,showActions=_ref.showActions;return React.createElement(\"div\",{className:\"post bg-white p-1 my-1\"},React.createElement(\"div\",null,React.createElement(Link,{to:\"/profile/\".concat(user)},React.createElement(\"img\",{className:\"round-img\",src:avatar,alt:\"\"}),React.createElement(\"h4\",null,name))),React.createElement(\"div\",null,React.createElement(\"p\",{className:\"my-1\"},text),React.createElement(\"p\",{className:\"post-date\"},\"Posted on \",React.createElement(Moment,{format:\"YYYY/MM/DD\"},date)),showActions&&React.createElement(Fragment,null,React.createElement(\"button\",{onClick:function onClick(){return addLike(_id);},type:\"button\",className:\"btn btn-light\"},React.createElement(\"i\",{className:\"fas fa-thumbs-up\"}),' ',React.createElement(\"span\",null,likes&&likes.length>0&&React.createElement(\"span\",null,likes.length))),React.createElement(\"button\",{onClick:function onClick(){return removeLike(_id);},type:\"button\",className:\"btn btn-light\"},React.createElement(\"i\",{className:\"fas fa-thumbs-down\"})),React.createElement(Link,{to:\"/posts/\".concat(_id),className:\"btn btn-primary\"},\"Discussion\",' ',comments&&comments.length>0&&React.createElement(\"span\",{className:\"comment-count\"},comments.length)),!auth.loading&&user===auth.user._id&&React.createElement(\"button\",{onClick:function onClick(){return deletePost(_id);},type:\"button\",className:\"btn btn-danger\"},React.createElement(\"i\",{className:\"fas fa-times\"})))));};PostItem.defaultProps={showActions:true};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps,{addLike:addLike,removeLike:removeLike,deletePost:deletePost})(PostItem);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/posts&comments/showPosts/PostItem.js"],"names":["React","Fragment","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","length","loading","defaultProps","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAAQC,OAAR,CAAiBC,UAAjB,CAA6BC,UAA7B,KAA8C,2BAA9C,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,UACfH,CAAAA,OADe,MACfA,OADe,CAEfC,UAFe,MAEfA,UAFe,CAGfC,UAHe,MAGfA,UAHe,CAIfE,IAJe,MAIfA,IAJe,gBAKfC,IALe,CAKPC,GALO,WAKPA,GALO,CAKFC,IALE,WAKFA,IALE,CAKIC,IALJ,WAKIA,IALJ,CAKUC,MALV,WAKUA,MALV,CAKkBC,IALlB,WAKkBA,IALlB,CAKwBC,KALxB,WAKwBA,KALxB,CAK+BC,QAL/B,WAK+BA,QAL/B,CAKyCC,IALzC,WAKyCA,IALzC,CAMfC,WANe,MAMfA,WANe,OAQf,4BAAK,SAAS,CAAC,wBAAf,EACE,+BACE,oBAAC,IAAD,EAAM,EAAE,oBAAcJ,IAAd,CAAR,EACE,2BAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,CAAED,MAAhC,CAAwC,GAAG,CAAC,EAA5C,EADF,CAEE,8BAAKD,IAAL,CAFF,CADF,CADF,CAOE,+BACE,yBAAG,SAAS,CAAC,MAAb,EAAqBD,IAArB,CADF,CAEE,yBAAG,SAAS,CAAC,WAAb,eACY,oBAAC,MAAD,EAAQ,MAAM,CAAC,YAAf,EAA6BM,IAA7B,CADZ,CAFF,CAMGC,WAAW,EACV,oBAAC,QAAD,MACE,8BACE,OAAO,CAAE,yBAAMd,CAAAA,OAAO,CAACM,GAAD,CAAb,EADX,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAC,eAHZ,EAKE,yBAAG,SAAS,CAAC,kBAAb,EALF,CAKqC,GALrC,CAMA,gCAAOK,KAAK,EAAIA,KAAK,CAACI,MAAN,CAAe,CAAxB,EAA6B,gCAAOJ,KAAK,CAACI,MAAb,CAApC,CANA,CADF,CASE,8BACE,OAAO,CAAE,yBAAMd,CAAAA,UAAU,CAACK,GAAD,CAAhB,EADX,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAC,eAHZ,EAKE,yBAAG,SAAS,CAAC,oBAAb,EALF,CATF,CAgBE,oBAAC,IAAD,EAAM,EAAE,kBAAYA,GAAZ,CAAR,CAA2B,SAAS,CAAC,iBAArC,eACa,GADb,CAEGM,QAAQ,EAAIA,QAAQ,CAACG,MAAT,CAAkB,CAA9B,EACC,4BAAM,SAAS,CAAC,eAAhB,EAAiCH,QAAQ,CAACG,MAA1C,CAHJ,CAhBF,CAsBG,CAACX,IAAI,CAACY,OAAN,EAAiBN,IAAI,GAAKN,IAAI,CAACM,IAAL,CAAUJ,GAApC,EACC,8BACE,OAAO,CAAE,yBAAMJ,CAAAA,UAAU,CAACI,GAAD,CAAhB,EADX,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAC,gBAHZ,EAKE,yBAAG,SAAS,CAAC,cAAb,EALF,CAvBJ,CAPJ,CAPF,CARe,EAAjB,CA2DAH,QAAQ,CAACc,YAAT,CAAwB,CACtBH,WAAW,CAAE,IADS,CAAxB,CAaA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCf,IAAI,CAAEe,KAAK,CAACf,IADoB,CAAL,EAA7B,CAIA,cAAeL,CAAAA,OAAO,CAACmB,eAAD,CACtB,CAAElB,OAAO,CAAPA,OAAF,CAAWC,UAAU,CAAVA,UAAX,CAAuBC,UAAU,CAAVA,UAAvB,CADsB,CAAP,CAEbC,QAFa,CAAf","sourcesContent":["import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {addLike, removeLike, deletePost} from '../../../actions/postActs'\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={() => addLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-up' />{' '}\r\n          <span>{likes && likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={() => removeLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-down' />\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n            Discussion{' '}\r\n            {comments && comments.length > 0 && (\r\n              <span className='comment-count'>{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={() => deletePost(_id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times' />\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n   )}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n{ addLike, removeLike, deletePost}\r\n)(PostItem)\r\n"]},"metadata":{},"sourceType":"module"}