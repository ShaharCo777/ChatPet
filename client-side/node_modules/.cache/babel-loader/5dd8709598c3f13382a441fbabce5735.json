{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_EROR } from './consts';\nimport { setAlert } from './alertAct';\nimport setAuthToken from '../setAuthToken'; //load user\n\nexport const loadUser = () => async dispatch => {}; //register\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      data: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/actions/authActs.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_EROR","setAlert","setAuthToken","loadUser","dispatch","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,SAJJ,QAKW,UALX;AAMA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB,C,CACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAiB,CAE9C,CAFM,C,CAKP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMJ,QAAN,IAAkB;AACrE,QAAMK,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AACAL,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEnB,gBADC;AAEPoB,MAAAA,IAAI,EAAEH,GAAG,CAACG;AAFH,KAAD,CAAR;AAKD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIlB,QAAQ,CAACH,QAAQ,CAACqB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDnB,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAElB;AADC,KAAD,CAAR;AAGD;AACF,CA3BI","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_EROR\r\n    } from './consts'\r\nimport { setAlert } from './alertAct';\r\nimport setAuthToken from '../setAuthToken'\r\n//load user\r\nexport const loadUser = () => async dispatch =>{\r\n    \r\n}\r\n\r\n\r\n//register\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n  \r\n    const body = JSON.stringify({ name, email, password });\r\n  \r\n    try {\r\n      const res = await axios.post('/api/users', body, config);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        data: res.data\r\n      });\r\n  \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n  \r\n      if (errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n  \r\n      dispatch({\r\n        type: REGISTER_FAIL\r\n      })\r\n    }\r\n  }    \r\n\r\n"]},"metadata":{},"sourceType":"module"}