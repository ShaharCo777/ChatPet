{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\drag&drop\\\\Dropezone.js\";\nimport React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nconst Dropzone = ({\n  onDrop,\n  accept,\n  multiple = true\n}) => {\n  // Initializing useDropzone hooks with options\n  const _useDropzone = useDropzone({\n    onDrop,\n    accept,\n    multiple\n  }),\n        getRootProps = _useDropzone.getRootProps,\n        getInputProps = _useDropzone.getInputProps,\n        isDragActive = _useDropzone.isDragActive;\n\n  if (accept) {\n    const cla = 'bigDropZone';\n  }\n\n  return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"dropzone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, isDragActive ? React.createElement(\"p\", {\n    className: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Now Release!\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \"Drag your picture here,\", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \"or click to select from your files\")));\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/drag&drop/Dropezone.js"],"names":["React","useDropzone","Dropzone","onDrop","accept","multiple","getRootProps","getInputProps","isDragActive","cla"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,QAAQ,GAAC;AAA3B,CAAD,KAAuC;AACtD;AADsD,uBAEAJ,WAAW,CAAC;AAChEE,IAAAA,MADgE;AAEhEC,IAAAA,MAFgE;AAGhEC,IAAAA;AAHgE,GAAD,CAFX;AAAA,QAE9CC,YAF8C,gBAE9CA,YAF8C;AAAA,QAEhCC,aAFgC,gBAEhCA,aAFgC;AAAA,QAEjBC,YAFiB,gBAEjBA,YAFiB;;AAQtD,MAAGJ,MAAH,EAAU;AACR,UAAMK,GAAG,GAAG,aAAZ;AACD;;AAGD,SACE,6CAASH,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,YAAY,GACX;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADW,GAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,6BAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,uCAJJ,CAFF,CADF;AAeD,CA5BD;;AA8BA,eAAeN,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst Dropzone = ({ onDrop, accept, multiple=true }) => {\r\n  // Initializing useDropzone hooks with options\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept,\r\n    multiple\r\n  });\r\n\r\n  if(accept){\r\n    const cla = 'bigDropZone'\r\n  }\r\n\r\n  \r\n  return (\r\n    <div {...getRootProps()} >\r\n      <input {...getInputProps()} />\r\n      <div className='dropzone'>\r\n        {isDragActive ? (\r\n          <p className=\"large\">Now Release!</p>\r\n        ) : (\r\n          <div >\r\n             <p/>Drag your picture here, \r\n             <p/>or click to select from your files\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Dropzone;\r\n"]},"metadata":{},"sourceType":"module"}