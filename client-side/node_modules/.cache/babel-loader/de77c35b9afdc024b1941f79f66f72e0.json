{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{ADD_POST,ADD_COMMENT,GET_POST,GET_POSTS,DELETE_POST,REMOVE_COMMENT,POST_ERROR,UPDATE_LIKES}from'../actions/consts';var inItialState={posts:[],post:null,comments:[],loading:true,error:{}};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:inItialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,data=action.data;switch(type){case GET_POSTS:return _objectSpread({},state,{posts:data,loading:false});case GET_POST:return _objectSpread({},state,{post:data.post,comments:data.comments,loading:false});case ADD_POST:return _objectSpread({},state,{posts:[data].concat(_toConsumableArray(state.posts)),loading:false});case DELETE_POST:return _objectSpread({},state,{posts:state.posts.filter(function(post){return post._id!==data;}),loading:false});case UPDATE_LIKES:return _objectSpread({},state,{posts:state.posts.map(function(post){return post._id===data.postId?_objectSpread({},post,{likes:data.likes}):post;}),loading:false});case POST_ERROR:return _objectSpread({},state,{error:data,loading:false});case ADD_COMMENT:return _objectSpread({},state,{comments:[data].concat(_toConsumableArray(state.comments)),loading:false});case REMOVE_COMMENT:return _objectSpread({},state,{comments:state.comments.filter(function(comment){return comment._id!==data;}),loading:false});default:return state;}}","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/reducers/post.js"],"names":["ADD_POST","ADD_COMMENT","GET_POST","GET_POSTS","DELETE_POST","REMOVE_COMMENT","POST_ERROR","UPDATE_LIKES","inItialState","posts","post","comments","loading","error","state","action","type","data","filter","_id","map","postId","likes","comment"],"mappings":"mYAAA,OACIA,QADJ,CAEIC,WAFJ,CAGIC,QAHJ,CAIIC,SAJJ,CAKIC,WALJ,CAMIC,cANJ,CAOIC,UAPJ,CAQIC,YARJ,KAWO,mBAXP,CAaA,GAAMC,CAAAA,YAAY,CAAE,CAChBC,KAAK,CAAE,EADS,CAEhBC,IAAI,CAAE,IAFU,CAGhBC,QAAQ,CAAE,EAHM,CAIhBC,OAAO,CAAE,IAJO,CAKhBC,KAAK,CAAE,EALS,CAApB,CAQA,cAAe,WAAuC,IAA9BC,CAAAA,KAA8B,2DAAtBN,YAAsB,IAARO,CAAAA,MAAQ,8CAC3CC,CAAAA,IAD2C,CAC7BD,MAD6B,CAC3CC,IAD2C,CACrCC,IADqC,CAC7BF,MAD6B,CACrCE,IADqC,CAGlD,OAAOD,IAAP,EACI,IAAKb,CAAAA,SAAL,CACI,wBACGW,KADH,EAEAL,KAAK,CAAEQ,IAFP,CAGAL,OAAO,CAAE,KAHT,GAKJ,IAAKV,CAAAA,QAAL,CACI,wBACOY,KADP,EAEIJ,IAAI,CAAEO,IAAI,CAACP,IAFf,CAGIC,QAAQ,CAAEM,IAAI,CAACN,QAHnB,CAIIC,OAAO,CAAC,KAJZ,GAMJ,IAAKZ,CAAAA,QAAL,CACI,wBACOc,KADP,EAEIL,KAAK,EAAGQ,IAAH,4BAAYH,KAAK,CAACL,KAAlB,EAFT,CAGIG,OAAO,CAAE,KAHb,GAKJ,IAAKR,CAAAA,WAAL,CACI,wBACOU,KADP,EAEIL,KAAK,CAAEK,KAAK,CAACL,KAAN,CAAYS,MAAZ,CAAmB,SAAAR,IAAI,QACzBA,CAAAA,IAAI,CAACS,GAAL,GAAaF,IADY,EAAvB,CAFX,CAIIL,OAAO,CAAE,KAJb,GAMJ,IAAKL,CAAAA,YAAL,CACI,wBACOO,KADP,EAEIL,KAAK,CAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAgB,SAAAV,IAAI,QACvBA,CAAAA,IAAI,CAACS,GAAL,GAAaF,IAAI,CAACI,MAAlB,kBACIX,IADJ,EACUY,KAAK,CAAEL,IAAI,CAACK,KADtB,GAC+BZ,IAFR,EAApB,CAFX,CAKIE,OAAO,CAAE,KALb,GAOJ,IAAKN,CAAAA,UAAL,CACI,wBACOQ,KADP,EAEID,KAAK,CAAEI,IAFX,CAGIL,OAAO,CAAC,KAHZ,GAKJ,IAAKX,CAAAA,WAAL,CACI,wBACOa,KADP,EAEIH,QAAQ,EAAGM,IAAH,4BAAYH,KAAK,CAACH,QAAlB,EAFZ,CAGIC,OAAO,CAAE,KAHb,GAKJ,IAAKP,CAAAA,cAAL,CACI,wBACOS,KADP,EAEIH,QAAQ,CAAEG,KAAK,CAACH,QAAN,CAAeO,MAAf,CAAsB,SAAAK,OAAO,QACvCA,CAAAA,OAAO,CAACJ,GAAR,GAAgBF,IADuB,EAA7B,CAFd,CAIIL,OAAO,CAAE,KAJb,GAMJ,QACI,MAAOE,CAAAA,KAAP,CAvDR,CAyDH","sourcesContent":["import{\r\n    ADD_POST,\r\n    ADD_COMMENT,\r\n    GET_POST,\r\n    GET_POSTS,\r\n    DELETE_POST,\r\n    REMOVE_COMMENT,\r\n    POST_ERROR,\r\n    UPDATE_LIKES\r\n\r\n\r\n} from '../actions/consts'\r\n\r\nconst inItialState ={\r\n    posts: [],\r\n    post: null,\r\n    comments: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = inItialState, action) {\r\n    const {type, data} = action\r\n\r\n    switch(type) {\r\n        case GET_POSTS:\r\n            return{\r\n            ...state,\r\n            posts: data,\r\n            loading: false\r\n            }\r\n        case GET_POST:\r\n            return{\r\n                ...state,\r\n                post: data.post,\r\n                comments: data.comments,\r\n                loading:false\r\n            }\r\n        case ADD_POST:\r\n            return{\r\n                ...state,\r\n                posts: [data, ...state.posts],\r\n                loading: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post =>\r\n                     post._id !== data),\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return{\r\n                ...state,\r\n                posts: state.posts.map(post => \r\n                    post._id === data.postId ? \r\n                    {...post, likes: data.likes} : post),\r\n                loading: false\r\n            }\r\n        case POST_ERROR:\r\n            return{\r\n                ...state,\r\n                error: data,\r\n                loading:false\r\n            }\r\n        case ADD_COMMENT:\r\n            return{\r\n                ...state,\r\n                comments: [data, ...state.comments],\r\n                loading: false\r\n            }\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                comments: state.comments.filter(comment =>\r\n                comment._id !== data ),\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}