{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\profile\\\\forms\\\\ProfilePicture\\\\SetUpPicture.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from '../../../drag&drop/Dropezone';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserProfile } from '../../../../actions/profileActs';\n\nconst SetUpPicture = ({\n  profile: {\n    profile,\n    loading\n  },\n  createPictureProfile,\n  history\n}) => {\n  const _useState = useState({\n    profileImage: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  useEffect(() => {\n    getUserProfile();\n\n    if (profile.profileImage) {\n      console.log(\"profileImage: \" + profile.profileImage);\n      setFormData({\n        profileImage: profile.profileImage\n      });\n    }\n  }, [loading]);\n  const profileImage = formData.profileImage;\n\n  const onDrop = e => {\n    console.log(e[0] + 'p');\n    setFormData({\n      profileImage: e[0]\n    });\n  };\n\n  const sentData = e => {\n    e.preventDefault();\n    createPictureProfile(formData, history);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => sentData(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Set up a profile picture!\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Drag and Drop Example\"), React.createElement(\"img\", {\n    className: \"round-img\",\n    src: profileImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Dropzone, {\n    onDrop: e => onDrop(e),\n    accept: \"image/*\",\n    multiple: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-light my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", React.createElement(Link, {\n    to: \"/profiles/editProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Go Back\")));\n};\n\nconst mapStateToProps = state => ({\n  profileImage: state.profile.profileImage\n});\n\nSetUpPicture.propTypes = {\n  createPictureProfile: PropTypes.func.isRequired,\n  profileImage: PropTypes.string.isRequired,\n  getUserProfile: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  createPictureProfile,\n  getUserProfile\n})(withRouter(SetUpPicture));","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/profile/forms/ProfilePicture/SetUpPicture.js"],"names":["React","useEffect","useState","PropTypes","Dropzone","connect","withRouter","getUserProfile","SetUpPicture","profile","loading","createPictureProfile","history","profileImage","formData","setFormData","console","log","onDrop","e","sentData","preventDefault","mapStateToProps","state","propTypes","func","isRequired","string"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SAAQC,cAAR,QAA6B,iCAA7B;;AAKA,MAAMC,YAAY,GAAG,CAAC;AAClBC,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GADS;AAElBC,EAAAA,oBAFkB;AAIjBC,EAAAA;AAJiB,CAAD,KAIH;AAAA,oBAEkBV,QAAQ,CAAC;AAEzCW,IAAAA,YAAY,EAAE;AAF2B,GAAD,CAF1B;AAAA;AAAA,QAEPC,QAFO;AAAA,QAEGC,WAFH;;AAQdd,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,cAAc;;AACd,QAAGE,OAAO,CAACI,YAAX,EAAwB;AACpBG,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAkBR,OAAO,CAACI,YAAtC;AACAE,MAAAA,WAAW,CAAC;AAACF,QAAAA,YAAY,EAAEJ,OAAO,CAACI;AAAvB,OAAD,CAAX;AACH;AACJ,GANQ,EAMP,CAACH,OAAD,CANO,CAAT;AARc,QAgBVG,YAhBU,GAiBZC,QAjBY,CAgBVD,YAhBU;;AAmBd,QAAMK,MAAM,GAAGC,CAAC,IAAG;AACfH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAAC,CAAD,CAAD,GAAO,GAAnB;AACAJ,IAAAA,WAAW,CAAC;AAACF,MAAAA,YAAY,EAAEM,CAAC,CAAC,CAAD;AAAhB,KAAD,CAAX;AACD,GAHH;;AAKA,QAAMC,QAAQ,GAAGD,CAAC,IAAG;AACjBA,IAAAA,CAAC,CAACE,cAAF;AACAV,IAAAA,oBAAoB,CAACG,QAAD,EAAWF,OAAX,CAApB;AACD,GAHH;;AAMA,SACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAGO,CAAC,IAAIC,QAAQ,CAACD,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADC,EACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjC,EAED;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFC,EAGD;AAAK,IAAA,SAAS,EAAC,WAAf;AAA4B,IAAA,GAAG,EAAEN,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHC,EAID,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAGM,CAAD,IAAOD,MAAM,CAACC,CAAD,CAA/B;AAAoC,IAAA,MAAM,EAAE,SAA5C;AAAuD,IAAA,QAAQ,EAAE,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJC,CADD,EAOA;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,sBAA/B;AAAuD,IAAA,KAAK,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,EAQA;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAwC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,uBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAxC,CARA,CADJ;AAYH,CA9CD;;AAgDA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,YAAY,EAAEU,KAAK,CAACd,OAAN,CAAcI;AADE,CAAL,CAA7B;;AAIAL,YAAY,CAACgB,SAAb,GAAyB;AACrBb,EAAAA,oBAAoB,EAAER,SAAS,CAACsB,IAAV,CAAeC,UADhB;AAErBb,EAAAA,YAAY,EAAEV,SAAS,CAACwB,MAAV,CAAiBD,UAFV;AAGrBnB,EAAAA,cAAc,EAAEJ,SAAS,CAACsB,IAAV,CAAeC;AAHV,CAAzB;AAOA,eAAerB,OAAO,CAClBiB,eADkB,EAElB;AAACX,EAAAA,oBAAD;AAAuBJ,EAAAA;AAAvB,CAFkB,CAAP,CAE8BD,UAAU,CAACE,YAAD,CAFxC,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Dropzone from '../../../drag&drop/Dropezone'\r\nimport {connect} from 'react-redux'\r\nimport { withRouter} from 'react-router-dom'\r\nimport {getUserProfile} from '../../../../actions/profileActs'\r\n\r\n\r\n\r\n\r\nconst SetUpPicture = ({\r\n    profile: {profile, loading},\r\n    createPictureProfile,\r\n    \r\n     history}) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n\r\n    profileImage: ''\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        getUserProfile()\r\n        if(profile.profileImage){\r\n            console.log(\"profileImage: \"+ profile.profileImage)\r\n            setFormData({profileImage: profile.profileImage})\r\n        }\r\n    },[loading])\r\n    const  { \r\n        profileImage\r\n  } = formData\r\n\r\n    const onDrop = e =>{\r\n        console.log(e[0] + 'p')\r\n        setFormData({profileImage: e[0]})\r\n      }\r\n    \r\n    const sentData = e =>{\r\n        e.preventDefault()\r\n        createPictureProfile(formData, history)\r\n      }\r\n\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit= {e => sentData(e)}>\r\n         <div className=\"form-group\">\r\n        <h3>Set up a profile picture!</h3><br/>\r\n        <h1 className=\"text-center\">Drag and Drop Example</h1>\r\n        <img className='round-img'  src={profileImage}/> \r\n        <Dropzone onDrop={(e) => onDrop(e)} accept={\"image/*\"} multiple={false}/>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\"  value='Submit'/>\r\n        <button className=\"btn btn-light my-1\"> <Link to='/profiles/editProfile'>Go Back</Link></button>\r\n      </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profileImage: state.profile.profileImage\r\n  })\r\n\r\nSetUpPicture.propTypes = {\r\n    createPictureProfile: PropTypes.func.isRequired,\r\n    profileImage: PropTypes.string.isRequired,\r\n    getUserProfile: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {createPictureProfile, getUserProfile}) (withRouter(SetUpPicture))\r\n\r\n   \r\n   "]},"metadata":{},"sourceType":"module"}