{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alertAct';\nimport { GET_PROFILE, PROFILE_ERROR } from './consts';\nexport const getUserProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      data: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      data: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //create or updite profile\n\nexport const createProfile = (FormData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('http://localhost:5000/api/profile', FormData, config);\n    dispatch({\n      type: GET_PROFILE,\n      data: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/profiles/profilePicture');\n    }\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      data: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getUserProfilePicture = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile/profilePicture/me');\n    dispatch({\n      type: GET_PROFILE,\n      data: res.data\n    });\n    console.log();\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      data: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //create or updite profile picture\n\nexport const createPictureProfile = (image, history) => async dispatch => {\n  if (!image) {\n    dispatch(setAlert('You should upload a photo, or click \"skip\"', 'danger'));\n  } else {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const data = {\n        profileImage: image\n      };\n      const res = await axios.post('http://localhost:5000/api/profile/profilePicture', data, config);\n      dispatch({\n        type: GET_PROFILE,\n        data: res.data\n      });\n      dispatch(setAlert('Profile Picture is set', 'success'));\n      history.push('/dashboard');\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        data: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/actions/profileActs.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","getUserProfile","dispatch","res","get","type","data","err","msg","response","statusText","status","createProfile","FormData","history","edit","config","headers","post","push","errors","forEach","error","getUserProfilePicture","console","log","createPictureProfile","image","profileImage"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {setAlert} from './alertAct'\r\n\r\nimport{\r\n    GET_PROFILE,\r\n    PROFILE_ERROR\r\n} from './consts'\r\n\r\nexport const getUserProfile = () => async dispatch => {\r\ntry{\r\n  const res = await axios.get('http://localhost:5000/api/profile/me')\r\n\r\n    dispatch({\r\n        type: GET_PROFILE,\r\n        data: res.data\r\n    })\r\n} catch (err){\r\n    dispatch({\r\n        type: PROFILE_ERROR,\r\n        data: {\r\n            msg: err.response.statusText,\r\n            status: err.response.status\r\n    }\r\n    })\r\n\r\n}\r\n}\r\n//create or updite profile\r\nexport const createProfile = (FormData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n\r\n        const res = await axios.post('http://localhost:5000/api/profile', FormData, config)\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            data: res.data\r\n        })\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'))\r\n        if(!edit){\r\n            history.push('/profiles/profilePicture')\r\n        } \r\n\r\n        history.push('/dashboard')\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n  \r\n        if (errors) {\r\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            data: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n        }\r\n    })\r\n    }\r\n}\r\n\r\nexport const getUserProfilePicture = () => async dispatch => {\r\n    try{\r\n      const res = await axios.get('http://localhost:5000/api/profile/profilePicture/me')\r\n    \r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            data: res.data\r\n        })\r\n        console.log()\r\n    } catch (err){\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            data: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n        }\r\n        })\r\n    \r\n    }\r\n    }\r\n\r\n//create or updite profile picture\r\nexport const createPictureProfile = (image, history) => async dispatch => {\r\n    if(!image){\r\n        dispatch(setAlert('You should upload a photo, or click \"skip\"', 'danger'))\r\n    }\r\n    else{\r\n    try {\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n\r\n        const data = {\r\n            profileImage: image\r\n        }\r\n        const res = await axios.post(\r\n            'http://localhost:5000/api/profile/profilePicture', data, config)\r\n\r\n\r\n            dispatch({\r\n            type: GET_PROFILE,\r\n            data: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Profile Picture is set', 'success'))\r\n\r\n        history.push('/dashboard')\r\n  } catch (err) {\r\n        const errors = err.response.data.errors;\r\n  \r\n        if (errors) {\r\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            data: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n        }\r\n    })\r\n    }\r\n}}\r\n"]},"metadata":{},"sourceType":"module"}