{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahar\\\\Desktop\\\\webS\\\\MyProjacts\\\\ChatPet\\\\client-side\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getUserProfile } from '../../actions/profileActs';\nimport spinner from '../../img/spinner.gif';\n\nconst Dashboard = ({\n  getUserProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getUserProfile();\n  }, []);\n  return loading && profile == null ? React.createElement(\"img\", {\n    src: spinner,\n    alt: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Home Page\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Welcome \"), \"[]\"));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nDashboard.propTypes = {\n  getUserProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserProfile\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/shahar/Desktop/webS/MyProjacts/ChatPet/client-side/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","getUserProfile","spinner","Dashboard","auth","profile","loading","mapStateToProps","state","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACfF,EAAAA,cADe;AAEfG,EAAAA,IAFe;AAGfC,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV;AAHO,CAAD,KAGkB;AAChCT,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc;AACf,GAFM,EAEJ,EAFI,CAAT;AAIA,SACIK,OAAO,IAAID,OAAO,IAAI,IAAtB,GACA;AAAK,IAAA,GAAG,EAAEH,OAAV;AAAmB,IAAA,GAAG,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAEK,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,EAEG;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,OAFH,CAHT;AAUH,CAlBD;;AAoBA,MAAMK,eAAe,GAAGC,KAAK,KAAI;AAC7BJ,EAAAA,IAAI,EAAEI,KAAK,CAACJ,IADiB;AAE7BC,EAAAA,OAAO,EAAEG,KAAK,CAACH;AAFc,CAAJ,CAA7B;;AAKAF,SAAS,CAACM,SAAV,GAAsB;AAClBR,EAAAA,cAAc,EAAEF,SAAS,CAACW,IAAV,CAAeC,UADb;AAElBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD,UAFL;AAGlBN,EAAAA,OAAO,EAAEN,SAAS,CAACa,MAAV,CAAiBD;AAHR,CAAtB;AAMA,eAAeX,OAAO,CAClBO,eADkB,EAElB;AAAEN,EAAAA;AAAF,CAFkB,CAAP,CAEQE,SAFR,CAAf","sourcesContent":["import React, {useEffect, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {getUserProfile} from '../../actions/profileActs'\r\nimport spinner from '../../img/spinner.gif'\r\n\r\nconst Dashboard = ({\r\n    getUserProfile,\r\n    auth,\r\n    profile:{profile, loading}}) => {\r\n    useEffect(() => {\r\n        getUserProfile()\r\n      }, [])\r\n\r\n    return (\r\n        loading && profile == null ? \r\n        <img src={spinner} alt='Loading...'\r\n        /> : <Fragment>\r\n                <h1 className='large text-primary'>Home Page</h1>\r\n                <p className='lead'> \r\n                    <i className='fas fa-user'>Welcome </i>[]\r\n                </p>\r\n             </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nDashboard.propTypes = {\r\n    getUserProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getUserProfile})(Dashboard)\r\n"]},"metadata":{},"sourceType":"module"}