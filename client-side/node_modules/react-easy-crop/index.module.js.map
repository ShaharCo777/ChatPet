{"version":3,"file":"index.module.js","sources":["../src/styles.ts","../src/helpers.ts","../src/index.tsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Container = styled('div')({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  overflow: 'hidden',\n  userSelect: 'none',\n  touchAction: 'none',\n  cursor: 'move',\n})\n\nconst mediaStyles = {\n  maxWidth: '100%',\n  maxHeight: '100%',\n  margin: 'auto',\n  position: 'absolute',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  willChange: 'transform', // this improves performances and prevent painting issues on iOS Chrome\n}\n\n// @ts-ignore I don't want to duplicate mediaStyles\nexport const Img = styled('img')(mediaStyles)\n// @ts-ignore I don't want to duplicate mediaStyles\nexport const Video = styled('video')(mediaStyles)\n\nconst lineBorder = '1px solid rgba(255, 255, 255, 0.5)'\nconst cropperLines = {\n  content: '\" \"',\n  boxSizing: 'border-box',\n  position: 'absolute',\n  border: lineBorder,\n}\nconst cropperArea = {\n  position: 'absolute',\n  left: '50%',\n  top: '50%',\n  transform: 'translate(-50%, -50%)',\n  border: lineBorder,\n  boxSizing: 'border-box',\n  boxShadow: '0 0 0 9999em',\n  color: 'rgba(0,0,0,0.5)',\n  overflow: 'hidden',\n}\nconst gridLines = {\n  '&::before': {\n    ...cropperLines,\n    top: 0,\n    bottom: 0,\n    left: '33.33%',\n    right: '33.33%',\n    borderTop: 0,\n    borderBottom: 0,\n  },\n  '&::after': {\n    ...cropperLines,\n    top: '33.33%',\n    bottom: '33.33%',\n    left: 0,\n    right: 0,\n    borderLeft: 0,\n    borderRight: 0,\n  },\n}\nconst roundShape = {\n  borderRadius: '50%',\n}\n\ntype CropAreaProps = {\n  cropShape: 'round' | 'rect'\n  showGrid: boolean\n}\n\n// @ts-ignore styled definition does not accept an empty object as first param, while it actually works\nexport const CropArea = styled('div')({}, ({ cropShape, showGrid }: CropAreaProps) => ({\n  ...(() => {\n    switch (cropShape) {\n      case 'round':\n        return { ...cropperArea, ...roundShape }\n      case 'rect':\n      default:\n        return cropperArea\n    }\n  })(),\n  ...(showGrid ? gridLines : {}),\n}))\n","import { Area, MediaSize, Point, Size } from './types'\n\n/**\n * Compute the dimension of the crop area based on media size,\n * aspect ratio and optionally rotatation\n */\nexport function getCropSize(\n  mediaWidth: number,\n  mediaHeight: number,\n  aspect: number,\n  rotation = 0\n): Size {\n  const { width, height } = translateSize(mediaWidth, mediaHeight, rotation)\n\n  if (mediaWidth >= mediaHeight * aspect && width > mediaHeight * aspect) {\n    return {\n      width: mediaHeight * aspect,\n      height: mediaHeight,\n    }\n  }\n\n  if (width > mediaHeight * aspect) {\n    return {\n      width: mediaWidth,\n      height: mediaWidth / aspect,\n    }\n  }\n\n  if (width > height * aspect) {\n    return {\n      width: height * aspect,\n      height: height,\n    }\n  }\n\n  return {\n    width: width,\n    height: width / aspect,\n  }\n}\n\n/**\n * Ensure a new media position stays in the crop area.\n */\nexport function restrictPosition(\n  position: Point,\n  mediaSize: Size,\n  cropSize: Size,\n  zoom: number,\n  rotation = 0\n): Point {\n  const { width, height } = translateSize(mediaSize.width, mediaSize.height, rotation)\n\n  return {\n    x: restrictPositionCoord(position.x, width, cropSize.width, zoom),\n    y: restrictPositionCoord(position.y, height, cropSize.height, zoom),\n  }\n}\n\nfunction restrictPositionCoord(\n  position: number,\n  mediaSize: number,\n  cropSize: number,\n  zoom: number\n): number {\n  const maxPosition = (mediaSize * zoom) / 2 - cropSize / 2\n  return Math.min(maxPosition, Math.max(position, -maxPosition))\n}\n\nexport function getDistanceBetweenPoints(pointA: Point, pointB: Point) {\n  return Math.sqrt(Math.pow(pointA.y - pointB.y, 2) + Math.pow(pointA.x - pointB.x, 2))\n}\n\nexport function getRotationBetweenPoints(pointA: Point, pointB: Point) {\n  return (Math.atan2(pointB.y - pointA.y, pointB.x - pointA.x) * 180) / Math.PI\n}\n\n/**\n * Compute the output cropped area of the media in percentages and pixels.\n * x/y are the top-left coordinates on the src media\n */\nexport function computeCroppedArea(\n  crop: Point,\n  mediaSize: MediaSize,\n  cropSize: Size,\n  aspect: number,\n  zoom: number,\n  rotation = 0,\n  restrictPosition = true\n): { croppedAreaPercentages: Area; croppedAreaPixels: Area } {\n  // if the media is rotated by the user, we cannot limit the position anymore\n  // as it might need to be negative.\n  const limitAreaFn = restrictPosition && rotation === 0 ? limitArea : noOp\n  const croppedAreaPercentages = {\n    x: limitAreaFn(\n      100,\n      (((mediaSize.width - cropSize.width / zoom) / 2 - crop.x / zoom) / mediaSize.width) * 100\n    ),\n    y: limitAreaFn(\n      100,\n      (((mediaSize.height - cropSize.height / zoom) / 2 - crop.y / zoom) / mediaSize.height) * 100\n    ),\n    width: limitAreaFn(100, ((cropSize.width / mediaSize.width) * 100) / zoom),\n    height: limitAreaFn(100, ((cropSize.height / mediaSize.height) * 100) / zoom),\n  }\n\n  // we compute the pixels size naively\n  const widthInPixels = Math.round(\n    limitAreaFn(\n      mediaSize.naturalWidth,\n      (croppedAreaPercentages.width * mediaSize.naturalWidth) / 100\n    )\n  )\n  const heightInPixels = Math.round(\n    limitAreaFn(\n      mediaSize.naturalHeight,\n      (croppedAreaPercentages.height * mediaSize.naturalHeight) / 100\n    )\n  )\n  const isImgWiderThanHigh = mediaSize.naturalWidth >= mediaSize.naturalHeight * aspect\n\n  // then we ensure the width and height exactly match the aspect (to avoid rounding approximations)\n  // if the media is wider than high, when zoom is 0, the crop height will be equals to iamge height\n  // thus we want to compute the width from the height and aspect for accuracy.\n  // Otherwise, we compute the height from width and aspect.\n  const sizePixels = isImgWiderThanHigh\n    ? {\n        width: Math.round(heightInPixels * aspect),\n        height: heightInPixels,\n      }\n    : {\n        width: widthInPixels,\n        height: Math.round(widthInPixels / aspect),\n      }\n  const croppedAreaPixels = {\n    ...sizePixels,\n    x: Math.round(\n      limitAreaFn(\n        mediaSize.naturalWidth - sizePixels.width,\n        (croppedAreaPercentages.x * mediaSize.naturalWidth) / 100\n      )\n    ),\n    y: Math.round(\n      limitAreaFn(\n        mediaSize.naturalHeight - sizePixels.height,\n        (croppedAreaPercentages.y * mediaSize.naturalHeight) / 100\n      )\n    ),\n  }\n  return { croppedAreaPercentages, croppedAreaPixels }\n}\n\n/**\n * Ensure the returned value is between 0 and max\n */\nfunction limitArea(max: number, value: number): number {\n  return Math.min(max, Math.max(0, value))\n}\n\nfunction noOp(_max: number, value: number) {\n  return value\n}\n\n/**\n * Compute the crop and zoom from the croppedAreaPixels\n */\nfunction getZoomFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize?: Size\n): number {\n  const mediaZoom = mediaSize.width / mediaSize.naturalWidth\n\n  if (cropSize) {\n    const isHeightMaxSize = cropSize.height > cropSize.width\n    return isHeightMaxSize\n      ? cropSize.height / mediaZoom / croppedAreaPixels.height\n      : cropSize.width / mediaZoom / croppedAreaPixels.width\n  }\n\n  const aspect = croppedAreaPixels.width / croppedAreaPixels.height\n  const isHeightMaxSize = mediaSize.naturalWidth >= mediaSize.naturalHeight * aspect\n  return isHeightMaxSize\n    ? mediaSize.naturalHeight / croppedAreaPixels.height\n    : mediaSize.naturalWidth / croppedAreaPixels.width\n}\n\n/**\n * Compute the crop and zoom from the croppedAreaPixels\n */\nexport function getInitialCropFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize?: Size\n): { crop: Point; zoom: number } {\n  const mediaZoom = mediaSize.width / mediaSize.naturalWidth\n\n  const zoom = getZoomFromCroppedAreaPixels(croppedAreaPixels, mediaSize, cropSize)\n\n  const cropZoom = mediaZoom * zoom\n\n  const crop = {\n    x: ((mediaSize.naturalWidth - croppedAreaPixels.width) / 2 - croppedAreaPixels.x) * cropZoom,\n    y: ((mediaSize.naturalHeight - croppedAreaPixels.height) / 2 - croppedAreaPixels.y) * cropZoom,\n  }\n  return { crop, zoom }\n}\n\n/**\n * Return the point that is the center of point a and b\n */\nexport function getCenter(a: Point, b: Point): Point {\n  return {\n    x: (b.x + a.x) / 2,\n    y: (b.y + a.y) / 2,\n  }\n}\n\n/**\n *\n * Returns an x,y point once rotated around xMid,yMid\n */\nexport function rotateAroundMidPoint(\n  x: number,\n  y: number,\n  xMid: number,\n  yMid: number,\n  degrees: number\n): [number, number] {\n  const cos = Math.cos\n  const sin = Math.sin\n  const radian = (degrees * Math.PI) / 180 // Convert to radians\n  // Subtract midpoints, so that midpoint is translated to origin\n  // and add it in the end again\n  const xr = (x - xMid) * cos(radian) - (y - yMid) * sin(radian) + xMid\n  const yr = (x - xMid) * sin(radian) + (y - yMid) * cos(radian) + yMid\n\n  return [xr, yr]\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function translateSize(width: number, height: number, rotation: number): Size {\n  const centerX = width / 2\n  const centerY = height / 2\n\n  const outerBounds = [\n    rotateAroundMidPoint(0, 0, centerX, centerY, rotation),\n    rotateAroundMidPoint(width, 0, centerX, centerY, rotation),\n    rotateAroundMidPoint(width, height, centerX, centerY, rotation),\n    rotateAroundMidPoint(0, height, centerX, centerY, rotation),\n  ]\n\n  const minX = Math.min(...outerBounds.map(p => p[0]))\n  const maxX = Math.max(...outerBounds.map(p => p[0]))\n  const minY = Math.min(...outerBounds.map(p => p[1]))\n  const maxY = Math.max(...outerBounds.map(p => p[1]))\n\n  return { width: maxX - minX, height: maxY - minY }\n}\n","import React from 'react'\nimport { Container, CropArea, Img, Video } from './styles'\nimport { Area, MediaSize, Point, Size } from './types'\nimport {\n  getCropSize,\n  restrictPosition,\n  getDistanceBetweenPoints,\n  getRotationBetweenPoints,\n  computeCroppedArea,\n  getCenter,\n  getInitialCropFromCroppedAreaPixels,\n} from './helpers'\n\ntype Props = {\n  image?: string\n  video?: string\n  crop: Point\n  zoom: number\n  rotation: number\n  aspect: number\n  minZoom: number\n  maxZoom: number\n  cropShape: 'rect' | 'round'\n  cropSize?: Size\n  showGrid?: boolean\n  zoomSpeed: number\n  onCropChange: (location: Point) => void\n  onZoomChange?: (zoom: number) => void\n  onRotationChange?: (rotation: number) => void\n  onCropComplete?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onInteractionStart?: () => void\n  onInteractionEnd?: () => void\n  onMediaLoaded?: (mediaSize: MediaSize) => void\n  style: {\n    containerStyle?: React.CSSProperties\n    mediaStyle?: React.CSSProperties\n    cropAreaStyle?: React.CSSProperties\n  }\n  classes: {\n    containerClassName?: string\n    mediaClassName?: string\n    cropAreaClassName?: string\n  }\n  restrictPosition: boolean\n  initialCroppedAreaPixels?: Area\n  mediaProps: React.ImgHTMLAttributes<HTMLElement> | React.VideoHTMLAttributes<HTMLElement>\n}\n\ntype State = {\n  cropSize: Size | null\n  hasWheelJustStarted: boolean\n}\n\nconst MIN_ZOOM = 1\nconst MAX_ZOOM = 3\n\nclass Cropper extends React.Component<Props, State> {\n  static defaultProps = {\n    zoom: 1,\n    rotation: 0,\n    aspect: 4 / 3,\n    maxZoom: MAX_ZOOM,\n    minZoom: MIN_ZOOM,\n    cropShape: 'rect',\n    showGrid: true,\n    style: {},\n    classes: {},\n    mediaProps: {},\n    zoomSpeed: 1,\n    restrictPosition: true,\n  }\n\n  imageRef: HTMLImageElement | null = null\n  videoRef: HTMLVideoElement | null = null\n  containerRef: HTMLDivElement | null = null\n  containerRect: DOMRect | null = null\n  mediaSize: MediaSize = { width: 0, height: 0, naturalWidth: 0, naturalHeight: 0 }\n  dragStartPosition: Point = { x: 0, y: 0 }\n  dragStartCrop: Point = { x: 0, y: 0 }\n  lastPinchDistance = 0\n  lastPinchRotation = 0\n  rafDragTimeout: number | null = null\n  rafPinchTimeout: number | null = null\n  wheelTimer: number | null = null\n\n  state: State = {\n    cropSize: null,\n    hasWheelJustStarted: false,\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n      this.containerRef.addEventListener('gesturestart', this.preventZoomSafari)\n      this.containerRef.addEventListener('gesturechange', this.preventZoomSafari)\n    }\n\n    // when rendered via SSR, the image can already be loaded and its onLoad callback will never be called\n    if (this.imageRef && this.imageRef.complete) {\n      this.onMediaLoad()\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.containerRef.removeEventListener('wheel', this.onWheel)\n      this.containerRef.removeEventListener('gesturestart', this.preventZoomSafari)\n      this.containerRef.removeEventListener('gesturechange', this.preventZoomSafari)\n    }\n    this.cleanEvents()\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.rotation !== this.props.rotation) {\n      this.computeSizes()\n      this.recomputeCropPosition()\n    } else if (prevProps.aspect !== this.props.aspect) {\n      this.computeSizes()\n    } else if (prevProps.zoom !== this.props.zoom) {\n      this.recomputeCropPosition()\n    }\n  }\n\n  // this is to prevent Safari on iOS >= 10 to zoom the page\n  preventZoomSafari = (e: Event) => e.preventDefault()\n\n  cleanEvents = () => {\n    document.removeEventListener('mousemove', this.onMouseMove)\n    document.removeEventListener('mouseup', this.onDragStopped)\n    document.removeEventListener('touchmove', this.onTouchMove)\n    document.removeEventListener('touchend', this.onDragStopped)\n  }\n\n  onMediaLoad = () => {\n    this.computeSizes()\n    this.emitCropData()\n    this.setInitialCrop()\n\n    if (this.props.onMediaLoaded) {\n      this.props.onMediaLoaded(this.mediaSize)\n    }\n  }\n\n  setInitialCrop = () => {\n    const { initialCroppedAreaPixels, cropSize } = this.props\n\n    if (!initialCroppedAreaPixels) {\n      return\n    }\n\n    const { crop, zoom } = getInitialCropFromCroppedAreaPixels(\n      initialCroppedAreaPixels,\n      this.mediaSize,\n      cropSize\n    )\n    this.props.onCropChange(crop)\n    this.props.onZoomChange && this.props.onZoomChange(zoom)\n  }\n\n  getAspect() {\n    const { cropSize, aspect } = this.props\n    if (cropSize) {\n      return cropSize.width / cropSize.height\n    }\n    return aspect\n  }\n\n  computeSizes = () => {\n    const mediaRef = this.imageRef || this.videoRef\n    if (mediaRef) {\n      this.mediaSize = {\n        width: mediaRef.offsetWidth,\n        height: mediaRef.offsetHeight,\n        naturalWidth: this.imageRef?.naturalWidth || this.videoRef?.videoWidth || 0,\n        naturalHeight: this.imageRef?.naturalHeight || this.videoRef?.videoHeight || 0,\n      }\n      const cropSize = this.props.cropSize\n        ? this.props.cropSize\n        : getCropSize(\n            mediaRef.offsetWidth,\n            mediaRef.offsetHeight,\n            this.props.aspect,\n            this.props.rotation\n          )\n      this.setState({ cropSize }, this.recomputeCropPosition)\n    }\n    if (this.containerRef) {\n      this.containerRect = this.containerRef.getBoundingClientRect()\n    }\n  }\n\n  static getMousePoint = (e: MouseEvent | React.MouseEvent) => ({\n    x: Number(e.clientX),\n    y: Number(e.clientY),\n  })\n\n  static getTouchPoint = (touch: Touch | React.Touch) => ({\n    x: Number(touch.clientX),\n    y: Number(touch.clientY),\n  })\n\n  onMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault()\n    document.addEventListener('mousemove', this.onMouseMove)\n    document.addEventListener('mouseup', this.onDragStopped)\n    this.onDragStart(Cropper.getMousePoint(e))\n  }\n\n  onMouseMove = (e: MouseEvent) => this.onDrag(Cropper.getMousePoint(e))\n\n  onTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    document.addEventListener('touchmove', this.onTouchMove, { passive: false }) // iOS 11 now defaults to passive: true\n    document.addEventListener('touchend', this.onDragStopped)\n    if (e.touches.length === 2) {\n      this.onPinchStart(e)\n    } else if (e.touches.length === 1) {\n      this.onDragStart(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    // Prevent whole page from scrolling on iOS.\n    e.preventDefault()\n    if (e.touches.length === 2) {\n      this.onPinchMove(e)\n    } else if (e.touches.length === 1) {\n      this.onDrag(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onDragStart = ({ x, y }: Point) => {\n    this.dragStartPosition = { x, y }\n    this.dragStartCrop = { ...this.props.crop }\n    this.props.onInteractionStart?.()\n  }\n\n  onDrag = ({ x, y }: Point) => {\n    if (this.rafDragTimeout) window.cancelAnimationFrame(this.rafDragTimeout)\n\n    this.rafDragTimeout = window.requestAnimationFrame(() => {\n      if (!this.state.cropSize) return\n      if (x === undefined || y === undefined) return\n      const offsetX = x - this.dragStartPosition.x\n      const offsetY = y - this.dragStartPosition.y\n      const requestedPosition = {\n        x: this.dragStartCrop.x + offsetX,\n        y: this.dragStartCrop.y + offsetY,\n      }\n\n      const newPosition = this.props.restrictPosition\n        ? restrictPosition(\n            requestedPosition,\n            this.mediaSize,\n            this.state.cropSize,\n            this.props.zoom,\n            this.props.rotation\n          )\n        : requestedPosition\n      this.props.onCropChange(newPosition)\n    })\n  }\n\n  onDragStopped = () => {\n    this.cleanEvents()\n    this.emitCropData()\n    this.props.onInteractionEnd?.()\n  }\n\n  onPinchStart(e: React.TouchEvent<HTMLDivElement>) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    this.lastPinchDistance = getDistanceBetweenPoints(pointA, pointB)\n    this.lastPinchRotation = getRotationBetweenPoints(pointA, pointB)\n    this.onDragStart(getCenter(pointA, pointB))\n  }\n\n  onPinchMove(e: TouchEvent) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    const center = getCenter(pointA, pointB)\n    this.onDrag(center)\n\n    if (this.rafPinchTimeout) window.cancelAnimationFrame(this.rafPinchTimeout)\n    this.rafPinchTimeout = window.requestAnimationFrame(() => {\n      const distance = getDistanceBetweenPoints(pointA, pointB)\n      const newZoom = this.props.zoom * (distance / this.lastPinchDistance)\n      this.setNewZoom(newZoom, center)\n      this.lastPinchDistance = distance\n\n      const rotation = getRotationBetweenPoints(pointA, pointB)\n      const newRotation = this.props.rotation + (rotation - this.lastPinchRotation)\n      this.props.onRotationChange && this.props.onRotationChange(newRotation)\n      this.lastPinchRotation = rotation\n    })\n  }\n\n  onWheel = (e: WheelEvent) => {\n    e.preventDefault()\n    const point = Cropper.getMousePoint(e)\n    const newZoom = this.props.zoom - (e.deltaY * this.props.zoomSpeed) / 200\n    this.setNewZoom(newZoom, point)\n\n    if (!this.state.hasWheelJustStarted) {\n      this.setState({ hasWheelJustStarted: true }, () => this.props.onInteractionStart?.())\n    }\n\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n    this.wheelTimer = window.setTimeout(\n      () => this.setState({ hasWheelJustStarted: false }, () => this.props.onInteractionEnd?.()),\n      250\n    )\n  }\n\n  getPointOnContainer = ({ x, y }: Point) => {\n    if (!this.containerRect) {\n      throw new Error('The Cropper is not mounted')\n    }\n    return {\n      x: this.containerRect.width / 2 - (x - this.containerRect.left),\n      y: this.containerRect.height / 2 - (y - this.containerRect.top),\n    }\n  }\n\n  getPointOnMedia = ({ x, y }: Point) => {\n    const { crop, zoom } = this.props\n    return {\n      x: (x + crop.x) / zoom,\n      y: (y + crop.y) / zoom,\n    }\n  }\n\n  setNewZoom = (zoom: number, point: Point) => {\n    if (!this.state.cropSize || !this.props.onZoomChange) return\n\n    const zoomPoint = this.getPointOnContainer(point)\n    const zoomTarget = this.getPointOnMedia(zoomPoint)\n    const newZoom = Math.min(this.props.maxZoom, Math.max(zoom, this.props.minZoom))\n    const requestedPosition = {\n      x: zoomTarget.x * newZoom - zoomPoint.x,\n      y: zoomTarget.y * newZoom - zoomPoint.y,\n    }\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          requestedPosition,\n          this.mediaSize,\n          this.state.cropSize,\n          newZoom,\n          this.props.rotation\n        )\n      : requestedPosition\n\n    this.props.onCropChange(newPosition)\n    this.props.onZoomChange(newZoom)\n  }\n\n  emitCropData = () => {\n    if (!this.state.cropSize) return\n    // this is to ensure the crop is correctly restricted after a zoom back (https://github.com/ricardo-ch/react-easy-crop/issues/6)\n    const restrictedPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    const { croppedAreaPercentages, croppedAreaPixels } = computeCroppedArea(\n      restrictedPosition,\n      this.mediaSize,\n      this.state.cropSize,\n      this.getAspect(),\n      this.props.zoom,\n      this.props.rotation,\n      this.props.restrictPosition\n    )\n    this.props.onCropComplete &&\n      this.props.onCropComplete(croppedAreaPercentages, croppedAreaPixels)\n  }\n\n  recomputeCropPosition = () => {\n    if (!this.state.cropSize) return\n\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    this.props.onCropChange(newPosition)\n    this.emitCropData()\n  }\n\n  render() {\n    const {\n      image,\n      video,\n      mediaProps,\n      crop: { x, y },\n      rotation,\n      zoom,\n      cropShape,\n      showGrid,\n      style: { containerStyle, cropAreaStyle, mediaStyle },\n      classes: { containerClassName, cropAreaClassName, mediaClassName },\n    } = this.props\n\n    return (\n      <Container\n        onMouseDown={this.onMouseDown}\n        onTouchStart={this.onTouchStart}\n        ref={el => (this.containerRef = el)}\n        data-testid=\"container\"\n        style={containerStyle}\n        className={containerClassName}\n      >\n        {image ? (\n          <Img\n            alt=\"\"\n            className={mediaClassName}\n            {...mediaProps}\n            src={image}\n            ref={(el: HTMLImageElement) => (this.imageRef = el)}\n            style={{\n              ...mediaStyle,\n              transform: `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n            }}\n            onLoad={this.onMediaLoad}\n          />\n        ) : (\n          video && (\n            <Video\n              autoPlay\n              loop\n              muted={true}\n              alt=\"\"\n              className={mediaClassName}\n              {...mediaProps}\n              src={video}\n              ref={(el: HTMLVideoElement) => (this.videoRef = el)}\n              onLoadedMetadata={this.onMediaLoad}\n              style={{\n                ...mediaStyle,\n                transform: `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n              }}\n              controls={false}\n            />\n          )\n        )}\n        {this.state.cropSize && (\n          <CropArea\n            cropShape={cropShape}\n            showGrid={showGrid}\n            style={{\n              ...cropAreaStyle,\n              width: this.state.cropSize.width,\n              height: this.state.cropSize.height,\n            }}\n            data-testid=\"cropper\"\n            className={cropAreaClassName}\n          />\n        )}\n      </Container>\n    )\n  }\n}\n\nexport default Cropper\n"],"names":["Container","styled","position","top","left","right","bottom","overflow","userSelect","touchAction","cursor","mediaStyles","maxWidth","maxHeight","margin","willChange","Img","Video","lineBorder","cropperLines","content","boxSizing","border","cropperArea","transform","boxShadow","color","gridLines","borderTop","borderBottom","borderLeft","borderRight","roundShape","borderRadius","CropArea","_a","cropShape","showGrid","getCropSize","mediaWidth","mediaHeight","aspect","rotation","width","height","restrictPosition","mediaSize","cropSize","zoom","x","restrictPositionCoord","y","maxPosition","Math","min","max","getDistanceBetweenPoints","pointA","pointB","sqrt","pow","getRotationBetweenPoints","atan2","PI","computeCroppedArea","crop","limitAreaFn","limitArea","noOp","croppedAreaPercentages","widthInPixels","round","naturalWidth","heightInPixels","naturalHeight","isImgWiderThanHigh","sizePixels","croppedAreaPixels","value","_max","getZoomFromCroppedAreaPixels","mediaZoom","isHeightMaxSize_1","isHeightMaxSize","getInitialCropFromCroppedAreaPixels","cropZoom","getCenter","a","b","rotateAroundMidPoint","xMid","yMid","degrees","cos","sin","radian","xr","yr","translateSize","centerX","centerY","outerBounds","minX","map","p","maxX","minY","maxY","MIN_ZOOM","MAX_ZOOM","__extends","_this","hasWheelJustStarted","e","preventDefault","document","removeEventListener","onMouseMove","onDragStopped","onTouchMove","computeSizes","emitCropData","setInitialCrop","props","onMediaLoaded","initialCroppedAreaPixels","_b","onCropChange","onZoomChange","mediaRef","imageRef","videoRef","offsetWidth","offsetHeight","videoWidth","videoHeight","setState","recomputeCropPosition","containerRef","containerRect","getBoundingClientRect","addEventListener","onDragStart","Cropper","getMousePoint","onDrag","passive","touches","length","onPinchStart","getTouchPoint","onPinchMove","dragStartPosition","dragStartCrop","onInteractionStart","rafDragTimeout","window","cancelAnimationFrame","requestAnimationFrame","state","undefined","offsetX","offsetY","requestedPosition","newPosition","cleanEvents","onInteractionEnd","point","newZoom","deltaY","zoomSpeed","setNewZoom","wheelTimer","clearTimeout","setTimeout","Error","zoomPoint","getPointOnContainer","zoomTarget","getPointOnMedia","maxZoom","minZoom","restrictedPosition","onCropComplete","onWheel","preventZoomSafari","complete","onMediaLoad","prevProps","lastPinchDistance","lastPinchRotation","center","rafPinchTimeout","distance","newRotation","onRotationChange","image","video","mediaProps","_c","containerStyle","cropAreaStyle","mediaStyle","_d","containerClassName","cropAreaClassName","mediaClassName","React","onMouseDown","onTouchStart","ref","el","style","className","alt","src","onLoad","autoPlay","loop","muted","onLoadedMetadata","controls","classes","Number","clientX","clientY","touch","Component"],"mappings":"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"}